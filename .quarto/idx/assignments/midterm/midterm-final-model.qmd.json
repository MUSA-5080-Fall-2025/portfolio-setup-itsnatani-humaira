{"title":"MUSA 5080 Midterm","markdown":{"yaml":{"title":"MUSA 5080 Midterm","subtitle":"Single-Family Home Price Prediction in Philadelphia","author":"Jed Chew","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo","embed-resources":true}},"execute":{"warning":false,"message":false},"editor":{"markdown":{"wrap":80}}},"headingText":"MUSA 5080 Midterm","containsRefs":false,"markdown":"\n\n\n**Goal:** Predict 2023-2024 home sale prices accurately while communicating\nfindings clearly to a policy audience.\n\n```{r, echo = FALSE, include = FALSE}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(broom)\nlibrary(janitor)\nlibrary(sf)\nlibrary(tigris)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(RColorBrewer)\nlibrary(units)\nlibrary(knitr)\nlibrary(caret)\nlibrary(car)\nlibrary(ggcorrplot)\n\n# Set Census API key\ncensus_api_key(\"fe841b7ef0aa73d9579f0517bd1c8f26d33c789b\")\n\n# Get working directory\ngetwd()\n\n# Suppress Warnings\noptions(warn=-1)\n```\n\n## Part 1: Data Cleaning & Preparation\n\n### Primary Dataset: [Property Sales](https://metadata.phila.gov/#home/datasetdetails/5543865f20583086178c4ee5/representationdetails/55d624fdad35c7e854cb21a4/)\n\nThis dataset contains actual property sales with:\n\n-   Sale price\n-   Sale date\n-   Property characteristics (bedrooms, bathrooms, sq ft, etc.)\n-   Property location (address, coordinates)\n\n### Step 1: Load and clean Philadelphia sales data\n\n-   Clean it (missing values, outliers, data errors)\n-   Filter to 2023-2024 residential sales only\n\n```{r}\nsales_data <- read_csv(\"data/clean_data.csv\")\nhead(sales_data)\nglimpse(sales_data)\n```\n\n### Step 2: Load Secondary Data\n\n-   Census data (tidycensus):\n\n-   Spatial amenities (OpenDataPhilly)\n\n-   Join to sales data appropriately\n\n-   Make sure you have the correct CRS!\n\n--------------------------------------------------------------------------------\n\n### Step 3: Feature Engineering\n\n1.  **Buffer-based features**:\n\n    -   Parks within 500ft, 1000ft\n\n    -   Transit stops within 400ft\n\n    -   Schools, crime, etc.\n\n2.  **k-Nearest Neighbor features**:\n\n    -   Average distance to k nearest parks, transit, etc.\n\n3.  **Census variables**:\n\n    -   Join median income, education, poverty, etc.\n\n4.  **Interaction terms**:\n\n    -   Theoretically motivated combinations\n\n--------------------------------------------------------------------------------\n\n### Step 4: Exploratory Data Analysis\n\n**Create at least 5 professional visualizations:**\n\n1.  Distribution of sale prices (histogram)\n\n2.  Geographic distribution (map)\n\n3.  Price vs. structural features (scatter plots)\n\n4.  Price vs. spatial features (scatter plots)\n\n5.  One creative visualization\n\n```{r}\n# Create New Columns for Further Cleaning\nsales_data <- sales_data |> \n  mutate(psf = round(sale_price / total_livable_area, 2),\n         value_multiple = round(market_value / sale_price, 2)) |> \n  arrange(psf)\nsales_data\ncolnames(sales_data)\n```\n\n```{r}\n# Histogram of Price\nggplot(sales_data, aes(x = sale_price)) +\n  geom_histogram(fill = \"lightblue\", bins= 500) +\n  labs(title = \"Histogram of Price\", x = \"Price\", y = \"Frequency\")\n\n# Log Sales Price\nlog_sales_data <- mutate(sales_data, log_price = log(sale_price))\nggplot(log_sales_data, aes(x = log_price)) +\n  geom_histogram(fill = \"lightblue\", bins= 500) +\n  labs(title = \"Histogram of Price\", x = \"Log(Price)\", y = \"Frequency\")\n```\n\n```{r}\n# Further Cleaning\nselect_data <- sales_data |> \n  select(year_built, number_of_bathrooms, number_of_bedrooms, basements, \n         fireplaces, garage_spaces,\n         general_construction, interior_condition, exterior_condition, \n         census_tract, neigh_name, \n         value_multiple, market_value, sale_price, total_area, total_livable_area, \n         psf, violent_2blocks, petty_1block, dist_park_mi, \n         vacancy_rate, med_gross_rent, med_hh_income, pct_ba_plus, \n         pct_white, pct_black, pct_hispanic, pct_asian,\n         foodretail_1mi_count, \n         dist_school_public_ft, dist_school_charter_ft, \n         pct_age_25_44, pct_age_65plus,\n         poverty_rate, unemployment_rate) |> \n  filter(number_of_bathrooms > 0, number_of_bedrooms > 0) |> \n  mutate(age = 2024 - year_built,\n         basements = dplyr::recode(trimws(as.character(basements)),\n                              \"0\"=\"0\",\"A\"=\"1\",\"B\"=\"2\",\"C\"=\"3\",\"D\"=\"4\",\"E\"=\"5\",\n                              \"F\"=\"6\",\"G\"=\"7\",\"H\"=\"8\",\"I\"=\"9\"),\n         basements = as.integer(basements)) |> \n  rename(\n    baths      = number_of_bathrooms,\n    beds       = number_of_bedrooms,\n    construction = general_construction,\n    interior   = interior_condition,\n    exterior   = exterior_condition,\n    garage     = garage_spaces,\n    tract      = census_tract,\n    neigh      = neigh_name,\n    mkt_value  = market_value,\n    area       = total_area,\n    liv_area   = total_livable_area\n  )\n\n# Intuition: market value should not deviate substantially \n# from the sale price\nvalue_range <- select_data |> \n  summarize(\n    q1 = quantile(value_multiple, 0.25, na.rm = TRUE),\n    q3 = quantile(value_multiple, 0.75, na.rm = TRUE),\n    iqr = q3 - q1,\n    lower = q1 - 1.5 * iqr,\n    upper = q3 + 1.5 * iqr)\nvalue_range\n\n# Intuition: psf outliers are likely non-market transactions\npsf_range <- select_data |> \n  summarize(\n    q1 = quantile(psf, 0.25, na.rm = TRUE),\n    q3 = quantile(psf, 0.75, na.rm = TRUE),\n    iqr = q3 - q1,\n    lower = q1 - 1.5 * iqr,\n    upper = q3 + 1.5 * iqr)\npsf_range  \n\nclean_data <- select_data |> \n  filter(\n    liv_area > 500,\n    area > 500,\n    between(psf, 40, 800),\n    between(value_multiple, 0.4, 2.0)\n  ) |> \n  mutate(across(where(is.numeric), ~ round(.x, 2))) |> \n  drop_na() |> \n  arrange(liv_area)\nclean_data\n```\n\n```{r}\n# Quick Category Check \ncount(clean_data, neigh)\ncount(clean_data, interior)\ncount(clean_data, exterior)\ncount(clean_data, basements)\n```\n\n**Metadata: Interior and Exterior Condition**\n\n1.  Newer Construction\n2.  Rehabilitated\n3.  Above Average\n4.  Rehabilitated\n5.  Average\n6.  Below Average\n7.  Vacant\n\n**Metadata: Basements**\n\n0.  None\n1.  A = Full Finished\n2.  B = Full Semi-Finished\n3.  C = Full Unfinished\n4.  D = Full\n5.  E = Partial Finished\n6.  F = Partial Semi-Finished\n7.  G = Partial Unfinished\n8.  H = Partial - Unknown Finish\n9.  I = Unknown Size - Finished\n\n### Step 5: Summary Statistics\n\n```{r}\n# Calculate Summary Stats\nstats_df <- clean_data %>%\n  summarise(across(\n    where(is.numeric),\n    list(\n      mean   = ~ mean(.x, na.rm = TRUE),\n      median = ~ median(.x, na.rm = TRUE),\n      sd     = ~ sd(.x, na.rm = TRUE),\n      q25    = ~ as.numeric(quantile(.x, 0.25, na.rm = TRUE)),\n      q75    = ~ as.numeric(quantile(.x, 0.75, na.rm = TRUE))\n    ),\n    .names = \"{.col}__{.fn}\"\n  )) %>%\n  pivot_longer(everything(),\n               names_to = c(\"variable\",\"stat\"),\n               names_sep = \"__\",\n               values_to = \"value\") %>%\n  pivot_wider(names_from = stat, values_from = value) %>%\n  mutate(across(-variable, ~ round(.x, 2))) %>%\n  arrange(variable)\n\n# Table Output\nlibrary(kableExtra)\nkbl(stats_df,\n    caption   = \"Summary Statistics\",\n    col.names = c(\"Variable\",\"Mean\",\"Median\",\"SD\",\"Q25\",\"Q75\"),\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"r\",\"r\"),\n    booktabs  = TRUE\n) %>%\n  kable_styling(full_width = FALSE,\n                bootstrap_options = c(\"striped\",\"hover\",\"condensed\")) %>%\n  add_header_above(c(\" \" = 1, \"Statistics\" = 5))\n```\n\n**Correlation Matrix**\n\n```{r}\nhedonic_vars <- clean_data[, c(\"age\", \"baths\", \"beds\", \"basements\", \"interior\", \"exterior\", \"area\", \"liv_area\")]\n\ncor_matrix <- cor(hedonic_vars, use = \"pairwise.complete.obs\", method = \"pearson\")\n\nggcorrplot(cor_matrix,\n           method = \"square\",\n           type = \"lower\",\n           lab = TRUE,\n           lab_size = 3,\n           colors = c(\"#a4133c\", \"white\", \"#a4133c\"))+\n    labs(title = \"Correlation Matrix for Hedonic Variables\") +\n    theme(plot.subtitle = element_text(size = 9, face = \"italic\"),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        axis.text.x = element_text(size = 7),\n        axis.text.y = element_text(size = 7),\n        axis.title = element_text(size = 8))\n```\n\n```{r}\nspatial_vars <- clean_data[, c(\n  \"violent_2blocks\", \"petty_1block\", \"dist_park_mi\",\n  \"vacancy_rate\", \"med_gross_rent\", \"med_hh_income\", \"pct_ba_plus\",\n  \"pct_white\", \"pct_black\", \"pct_hispanic\", \"pct_asian\",\n  \"foodretail_1mi_count\",\n  \"dist_school_public_ft\", \"dist_school_charter_ft\",\n  \"pct_age_25_44\", \"pct_age_65plus\",\n  \"poverty_rate\", \"unemployment_rate\"\n)]\n\nspatial_matrix <- cor(spatial_vars, use = \"pairwise.complete.obs\", method = \"pearson\")\n\nggcorrplot(spatial_matrix,\n           method = \"square\",\n           type = \"lower\",\n           lab = TRUE,\n           lab_size = 3,\n           colors = c(\"#a4133c\", \"white\", \"#a4133c\"))+\n    labs(title = \"Correlation Matrix for Spatial Variables\") +\n    theme(plot.subtitle = element_text(size = 9, face = \"italic\"),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        axis.text.x = element_text(size = 7),\n        axis.text.y = element_text(size = 7),\n        axis.title = element_text(size = 8))\n```\n\n--------------------------------------------------------------------------------\n\n## Part 2: Model Building & Evaluation using Cross-Validation\n\n--------------------------------------------------------------------------------\n\nEvaluate the model fit and predictive reliability using key metrics such as Mean\nAbsolute Error (MAE), Root Mean Squared Error (RMSE), and R-squared.\n\n```{r}\nclean_data$neigh <- as.factor(clean_data$neigh)\nclean_data$interior <- as.factor(clean_data$interior)\nclean_data$exterior <- as.factor(clean_data$exterior)\nclean_data$basements <- as.factor(clean_data$basements)\n                                 \ncount(clean_data, neigh)\ncount(clean_data, interior)\ncount(clean_data, exterior)\ncount(clean_data, basements)\n```\n\n```{r}\nset.seed(5080) # Set seed for reproducibility\nctrl <- trainControl(method = \"cv\", number = 10) #10-Fold CV\n\n# Model 1: Structural\ncv_m1 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2),\n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 2: + Spatial\ncv_m2 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft\n  + vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white\n  + poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus,\n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 3: + Neighborhood Fixed Effects\ncv_m3 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft +\n  vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white +\n  poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus +\n  neigh, \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 4: + Small Neighborhoods + Mkt Value\nclean_data <- clean_data |> \n  add_count(neigh) |> \n  mutate(\n    neigh_cv = if_else(\n      n < 10,                       # If fewer than 10 sales\n      \"Small_Neighborhoods\",        # Group them\n      as.character(neigh)           # Keep original\n    ),\n    neigh_cv = as.factor(neigh_cv)\n  )\n\ncv_m4 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  violent_2blocks + dist_park_mi + foodretail_1mi_count + dist_school_public_ft + \n  vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white +\n  poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus + \n  mkt_value +\n  neigh_cv, \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 5: + Simpler + Mkt Value\ncv_m5 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft +\n  mkt_value +\n  neigh_cv,  \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 6: Simpler Only\ncv_m6 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft + \n  neigh_cv,  \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Compare\ndata.frame(\n  Model = c(\"Structural\", \"Spatial\", \"Fixed Effects\", \"Small Neighborhoods + Mkt Value\", \"Simpler + Mkt Value\", \"Simpler Only\"),\n  Rsquared = c(cv_m1$results$Rsquared, cv_m2$results$Rsquared, cv_m3$results$Rsquared, \n               cv_m4$results$Rsquared, cv_m5$results$Rsquared, cv_m6$results$Rsquared),\n  RMSE = c(cv_m1$results$RMSE, cv_m2$results$RMSE, cv_m3$results$RMSE, \n           cv_m4$results$RMSE, cv_m5$results$RMSE, cv_m6$results$RMSE),\n  MAE = c(cv_m1$results$MAE, cv_m2$results$MAE, cv_m3$results$MAE, \n          cv_m4$results$MAE, cv_m5$results$MAE, cv_m6$results$MAE)\n)\n```\n\n```{r}\nlm_model3 <- cv_m3$finalModel\nvif_model3 <- vif(lm_model3)\nvif_m3 <- data.frame(Variable = names(vif_model3), # convert to data frame\n                     VIF = as.vector(vif_model3))\nkable(vif_m3, caption = \"Variance Inflation Factors for Model 3: Fixed Effects\")\n```\n\n```{r}\nlm_model5 <- cv_m5$finalModel\nvif_model5 <- vif(lm_model5)\nvif_m5 <- data.frame(Variable = names(vif_model5), # convert to data frame\n                     VIF = as.vector(vif_model5))\nkable(vif_m5, caption = \"Variance Inflation Factors for Model 5: Simpler + Mkt Value\")\n```\n","srcMarkdownNoYaml":"\n\n## MUSA 5080 Midterm\n\n**Goal:** Predict 2023-2024 home sale prices accurately while communicating\nfindings clearly to a policy audience.\n\n```{r, echo = FALSE, include = FALSE}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(broom)\nlibrary(janitor)\nlibrary(sf)\nlibrary(tigris)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(RColorBrewer)\nlibrary(units)\nlibrary(knitr)\nlibrary(caret)\nlibrary(car)\nlibrary(ggcorrplot)\n\n# Set Census API key\ncensus_api_key(\"fe841b7ef0aa73d9579f0517bd1c8f26d33c789b\")\n\n# Get working directory\ngetwd()\n\n# Suppress Warnings\noptions(warn=-1)\n```\n\n## Part 1: Data Cleaning & Preparation\n\n### Primary Dataset: [Property Sales](https://metadata.phila.gov/#home/datasetdetails/5543865f20583086178c4ee5/representationdetails/55d624fdad35c7e854cb21a4/)\n\nThis dataset contains actual property sales with:\n\n-   Sale price\n-   Sale date\n-   Property characteristics (bedrooms, bathrooms, sq ft, etc.)\n-   Property location (address, coordinates)\n\n### Step 1: Load and clean Philadelphia sales data\n\n-   Clean it (missing values, outliers, data errors)\n-   Filter to 2023-2024 residential sales only\n\n```{r}\nsales_data <- read_csv(\"data/clean_data.csv\")\nhead(sales_data)\nglimpse(sales_data)\n```\n\n### Step 2: Load Secondary Data\n\n-   Census data (tidycensus):\n\n-   Spatial amenities (OpenDataPhilly)\n\n-   Join to sales data appropriately\n\n-   Make sure you have the correct CRS!\n\n--------------------------------------------------------------------------------\n\n### Step 3: Feature Engineering\n\n1.  **Buffer-based features**:\n\n    -   Parks within 500ft, 1000ft\n\n    -   Transit stops within 400ft\n\n    -   Schools, crime, etc.\n\n2.  **k-Nearest Neighbor features**:\n\n    -   Average distance to k nearest parks, transit, etc.\n\n3.  **Census variables**:\n\n    -   Join median income, education, poverty, etc.\n\n4.  **Interaction terms**:\n\n    -   Theoretically motivated combinations\n\n--------------------------------------------------------------------------------\n\n### Step 4: Exploratory Data Analysis\n\n**Create at least 5 professional visualizations:**\n\n1.  Distribution of sale prices (histogram)\n\n2.  Geographic distribution (map)\n\n3.  Price vs. structural features (scatter plots)\n\n4.  Price vs. spatial features (scatter plots)\n\n5.  One creative visualization\n\n```{r}\n# Create New Columns for Further Cleaning\nsales_data <- sales_data |> \n  mutate(psf = round(sale_price / total_livable_area, 2),\n         value_multiple = round(market_value / sale_price, 2)) |> \n  arrange(psf)\nsales_data\ncolnames(sales_data)\n```\n\n```{r}\n# Histogram of Price\nggplot(sales_data, aes(x = sale_price)) +\n  geom_histogram(fill = \"lightblue\", bins= 500) +\n  labs(title = \"Histogram of Price\", x = \"Price\", y = \"Frequency\")\n\n# Log Sales Price\nlog_sales_data <- mutate(sales_data, log_price = log(sale_price))\nggplot(log_sales_data, aes(x = log_price)) +\n  geom_histogram(fill = \"lightblue\", bins= 500) +\n  labs(title = \"Histogram of Price\", x = \"Log(Price)\", y = \"Frequency\")\n```\n\n```{r}\n# Further Cleaning\nselect_data <- sales_data |> \n  select(year_built, number_of_bathrooms, number_of_bedrooms, basements, \n         fireplaces, garage_spaces,\n         general_construction, interior_condition, exterior_condition, \n         census_tract, neigh_name, \n         value_multiple, market_value, sale_price, total_area, total_livable_area, \n         psf, violent_2blocks, petty_1block, dist_park_mi, \n         vacancy_rate, med_gross_rent, med_hh_income, pct_ba_plus, \n         pct_white, pct_black, pct_hispanic, pct_asian,\n         foodretail_1mi_count, \n         dist_school_public_ft, dist_school_charter_ft, \n         pct_age_25_44, pct_age_65plus,\n         poverty_rate, unemployment_rate) |> \n  filter(number_of_bathrooms > 0, number_of_bedrooms > 0) |> \n  mutate(age = 2024 - year_built,\n         basements = dplyr::recode(trimws(as.character(basements)),\n                              \"0\"=\"0\",\"A\"=\"1\",\"B\"=\"2\",\"C\"=\"3\",\"D\"=\"4\",\"E\"=\"5\",\n                              \"F\"=\"6\",\"G\"=\"7\",\"H\"=\"8\",\"I\"=\"9\"),\n         basements = as.integer(basements)) |> \n  rename(\n    baths      = number_of_bathrooms,\n    beds       = number_of_bedrooms,\n    construction = general_construction,\n    interior   = interior_condition,\n    exterior   = exterior_condition,\n    garage     = garage_spaces,\n    tract      = census_tract,\n    neigh      = neigh_name,\n    mkt_value  = market_value,\n    area       = total_area,\n    liv_area   = total_livable_area\n  )\n\n# Intuition: market value should not deviate substantially \n# from the sale price\nvalue_range <- select_data |> \n  summarize(\n    q1 = quantile(value_multiple, 0.25, na.rm = TRUE),\n    q3 = quantile(value_multiple, 0.75, na.rm = TRUE),\n    iqr = q3 - q1,\n    lower = q1 - 1.5 * iqr,\n    upper = q3 + 1.5 * iqr)\nvalue_range\n\n# Intuition: psf outliers are likely non-market transactions\npsf_range <- select_data |> \n  summarize(\n    q1 = quantile(psf, 0.25, na.rm = TRUE),\n    q3 = quantile(psf, 0.75, na.rm = TRUE),\n    iqr = q3 - q1,\n    lower = q1 - 1.5 * iqr,\n    upper = q3 + 1.5 * iqr)\npsf_range  \n\nclean_data <- select_data |> \n  filter(\n    liv_area > 500,\n    area > 500,\n    between(psf, 40, 800),\n    between(value_multiple, 0.4, 2.0)\n  ) |> \n  mutate(across(where(is.numeric), ~ round(.x, 2))) |> \n  drop_na() |> \n  arrange(liv_area)\nclean_data\n```\n\n```{r}\n# Quick Category Check \ncount(clean_data, neigh)\ncount(clean_data, interior)\ncount(clean_data, exterior)\ncount(clean_data, basements)\n```\n\n**Metadata: Interior and Exterior Condition**\n\n1.  Newer Construction\n2.  Rehabilitated\n3.  Above Average\n4.  Rehabilitated\n5.  Average\n6.  Below Average\n7.  Vacant\n\n**Metadata: Basements**\n\n0.  None\n1.  A = Full Finished\n2.  B = Full Semi-Finished\n3.  C = Full Unfinished\n4.  D = Full\n5.  E = Partial Finished\n6.  F = Partial Semi-Finished\n7.  G = Partial Unfinished\n8.  H = Partial - Unknown Finish\n9.  I = Unknown Size - Finished\n\n### Step 5: Summary Statistics\n\n```{r}\n# Calculate Summary Stats\nstats_df <- clean_data %>%\n  summarise(across(\n    where(is.numeric),\n    list(\n      mean   = ~ mean(.x, na.rm = TRUE),\n      median = ~ median(.x, na.rm = TRUE),\n      sd     = ~ sd(.x, na.rm = TRUE),\n      q25    = ~ as.numeric(quantile(.x, 0.25, na.rm = TRUE)),\n      q75    = ~ as.numeric(quantile(.x, 0.75, na.rm = TRUE))\n    ),\n    .names = \"{.col}__{.fn}\"\n  )) %>%\n  pivot_longer(everything(),\n               names_to = c(\"variable\",\"stat\"),\n               names_sep = \"__\",\n               values_to = \"value\") %>%\n  pivot_wider(names_from = stat, values_from = value) %>%\n  mutate(across(-variable, ~ round(.x, 2))) %>%\n  arrange(variable)\n\n# Table Output\nlibrary(kableExtra)\nkbl(stats_df,\n    caption   = \"Summary Statistics\",\n    col.names = c(\"Variable\",\"Mean\",\"Median\",\"SD\",\"Q25\",\"Q75\"),\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"r\",\"r\"),\n    booktabs  = TRUE\n) %>%\n  kable_styling(full_width = FALSE,\n                bootstrap_options = c(\"striped\",\"hover\",\"condensed\")) %>%\n  add_header_above(c(\" \" = 1, \"Statistics\" = 5))\n```\n\n**Correlation Matrix**\n\n```{r}\nhedonic_vars <- clean_data[, c(\"age\", \"baths\", \"beds\", \"basements\", \"interior\", \"exterior\", \"area\", \"liv_area\")]\n\ncor_matrix <- cor(hedonic_vars, use = \"pairwise.complete.obs\", method = \"pearson\")\n\nggcorrplot(cor_matrix,\n           method = \"square\",\n           type = \"lower\",\n           lab = TRUE,\n           lab_size = 3,\n           colors = c(\"#a4133c\", \"white\", \"#a4133c\"))+\n    labs(title = \"Correlation Matrix for Hedonic Variables\") +\n    theme(plot.subtitle = element_text(size = 9, face = \"italic\"),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        axis.text.x = element_text(size = 7),\n        axis.text.y = element_text(size = 7),\n        axis.title = element_text(size = 8))\n```\n\n```{r}\nspatial_vars <- clean_data[, c(\n  \"violent_2blocks\", \"petty_1block\", \"dist_park_mi\",\n  \"vacancy_rate\", \"med_gross_rent\", \"med_hh_income\", \"pct_ba_plus\",\n  \"pct_white\", \"pct_black\", \"pct_hispanic\", \"pct_asian\",\n  \"foodretail_1mi_count\",\n  \"dist_school_public_ft\", \"dist_school_charter_ft\",\n  \"pct_age_25_44\", \"pct_age_65plus\",\n  \"poverty_rate\", \"unemployment_rate\"\n)]\n\nspatial_matrix <- cor(spatial_vars, use = \"pairwise.complete.obs\", method = \"pearson\")\n\nggcorrplot(spatial_matrix,\n           method = \"square\",\n           type = \"lower\",\n           lab = TRUE,\n           lab_size = 3,\n           colors = c(\"#a4133c\", \"white\", \"#a4133c\"))+\n    labs(title = \"Correlation Matrix for Spatial Variables\") +\n    theme(plot.subtitle = element_text(size = 9, face = \"italic\"),\n        plot.title = element_text(size = 12, face = \"bold\"),\n        axis.text.x = element_text(size = 7),\n        axis.text.y = element_text(size = 7),\n        axis.title = element_text(size = 8))\n```\n\n--------------------------------------------------------------------------------\n\n## Part 2: Model Building & Evaluation using Cross-Validation\n\n--------------------------------------------------------------------------------\n\nEvaluate the model fit and predictive reliability using key metrics such as Mean\nAbsolute Error (MAE), Root Mean Squared Error (RMSE), and R-squared.\n\n```{r}\nclean_data$neigh <- as.factor(clean_data$neigh)\nclean_data$interior <- as.factor(clean_data$interior)\nclean_data$exterior <- as.factor(clean_data$exterior)\nclean_data$basements <- as.factor(clean_data$basements)\n                                 \ncount(clean_data, neigh)\ncount(clean_data, interior)\ncount(clean_data, exterior)\ncount(clean_data, basements)\n```\n\n```{r}\nset.seed(5080) # Set seed for reproducibility\nctrl <- trainControl(method = \"cv\", number = 10) #10-Fold CV\n\n# Model 1: Structural\ncv_m1 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2),\n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 2: + Spatial\ncv_m2 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft\n  + vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white\n  + poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus,\n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 3: + Neighborhood Fixed Effects\ncv_m3 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft +\n  vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white +\n  poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus +\n  neigh, \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 4: + Small Neighborhoods + Mkt Value\nclean_data <- clean_data |> \n  add_count(neigh) |> \n  mutate(\n    neigh_cv = if_else(\n      n < 10,                       # If fewer than 10 sales\n      \"Small_Neighborhoods\",        # Group them\n      as.character(neigh)           # Keep original\n    ),\n    neigh_cv = as.factor(neigh_cv)\n  )\n\ncv_m4 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  violent_2blocks + dist_park_mi + foodretail_1mi_count + dist_school_public_ft + \n  vacancy_rate + med_gross_rent + med_hh_income + pct_ba_plus + pct_black + pct_white +\n  poverty_rate + unemployment_rate + pct_age_25_44 + pct_age_65plus + \n  mkt_value +\n  neigh_cv, \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 5: + Simpler + Mkt Value\ncv_m5 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft +\n  mkt_value +\n  neigh_cv,  \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Model 6: Simpler Only\ncv_m6 <- train(\n  sale_price ~ beds + baths + basements + interior + exterior + liv_area + poly(age, 2) +\n  dist_park_mi + foodretail_1mi_count + dist_school_public_ft + \n  neigh_cv,  \n  data = clean_data, method = \"lm\", trControl = ctrl\n)\n\n# Compare\ndata.frame(\n  Model = c(\"Structural\", \"Spatial\", \"Fixed Effects\", \"Small Neighborhoods + Mkt Value\", \"Simpler + Mkt Value\", \"Simpler Only\"),\n  Rsquared = c(cv_m1$results$Rsquared, cv_m2$results$Rsquared, cv_m3$results$Rsquared, \n               cv_m4$results$Rsquared, cv_m5$results$Rsquared, cv_m6$results$Rsquared),\n  RMSE = c(cv_m1$results$RMSE, cv_m2$results$RMSE, cv_m3$results$RMSE, \n           cv_m4$results$RMSE, cv_m5$results$RMSE, cv_m6$results$RMSE),\n  MAE = c(cv_m1$results$MAE, cv_m2$results$MAE, cv_m3$results$MAE, \n          cv_m4$results$MAE, cv_m5$results$MAE, cv_m6$results$MAE)\n)\n```\n\n```{r}\nlm_model3 <- cv_m3$finalModel\nvif_model3 <- vif(lm_model3)\nvif_m3 <- data.frame(Variable = names(vif_model3), # convert to data frame\n                     VIF = as.vector(vif_model3))\nkable(vif_m3, caption = \"Variance Inflation Factors for Model 3: Fixed Effects\")\n```\n\n```{r}\nlm_model5 <- cv_m5$finalModel\nvif_model5 <- vif(lm_model5)\nvif_m5 <- data.frame(Variable = names(vif_model5), # convert to data frame\n                     VIF = as.vector(vif_model5))\nkable(vif_m5, caption = \"Variance Inflation Factors for Model 5: Simpler + Mkt Value\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"midterm-final-model.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"MUSA 5080 Midterm","subtitle":"Single-Family Home Price Prediction in Philadelphia","author":"Jed Chew","date":"today","editor":{"markdown":{"wrap":80}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}