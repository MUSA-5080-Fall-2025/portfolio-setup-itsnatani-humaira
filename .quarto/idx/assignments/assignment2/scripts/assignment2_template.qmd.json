{"title":"Assignment 2: Spatial Analysis and Visualization","markdown":{"yaml":{"title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Itsnatani Humaira Anaqami","date":"05 October 2025","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo","embed-resources":true}},"execute":{"warning":false,"message":false},"editor":{"markdown":{"wrap":72}}},"headingText":"Assignment Overview","containsRefs":false,"markdown":"\n\n\n**Learning Objectives:** - Apply spatial operations to answer\npolicy-relevant research questions - Integrate census demographic data\nwith spatial analysis - Create publication-quality visualizations and\nmaps - Work with spatial data from multiple sources - Communicate\nfindings effectively for policy audiences\n\n------------------------------------------------------------------------\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable\npopulations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for\nhealthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and\nbrief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data: - Pennsylvania county boundaries -\nPennsylvania hospitals (from lecture data) - Pennsylvania census tracts\n\n**Your Task:**\n\n```{r}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\noptions(tigris_use_cache = TRUE)\noptions(tigris_progress = FALSE)  # Suppress tigris progress bars\n\n# Set your Census API key\ncensus_api_key(Sys.getenv(\"your_API_key\"))\n\n# Load spatial data\npa_counties <- st_read(here(\"assignments/assignment2/scripts/data/Pennsylvania_County_Boundaries.shp\"))\nhospitals <- st_read(here(\"assignments/assignment2/scripts/data/hospitals.geojson\"))\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, progress = FALSE)\n\n# Standardize CRS\nst_crs(pa_counties)\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\n# Check that all data loaded correctly\nhead(pa_counties)\nhead(hospitals)\nhead(census_tracts)\n```\n\n**Questions to answer:** \n- How many hospitals are in your dataset? 223 hospitals \n- How many census tracts? 3445 census tracts \n- What coordinate reference system is each dataset in? WGS 84 / Pseudo-Mercator\n\n------------------------------------------------------------------------\n\n#### Step 2: Get Demographic Data\n\nUse `tidycensus` to download tract-level demographic data for\nPennsylvania.\n\n**Required variables:** - Total population - Median household income -\nPopulation 65 years and over (you may need to sum multiple age\ncategories)\n\n**Your Task:**\n\n```{r}\n# Get demographic data from ACS\n# Get demographic data from ACS\ntract_data <- get_acs(\n  geography = \"tract\",\n  state     = \"42\",\n  variables = c(\n    total_population = \"B01003_001\",\n    median_household_income = \"B19013_001\"\n  ),\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\",\n  progress = FALSE\n)\n\nage_data <- get_acs(\n  geography = \"tract\",\n  state     = \"42\",\n  variables = c(\n    male_65 <- c(\"B01001_020\",\"B01001_021\",\"B01001_022\",\"B01001_023\",\"B01001_024\",\"B01001_025\"),\n    female_65 <- c(\"B01001_044\",\"B01001_045\",\"B01001_046\",\"B01001_047\",\"B01001_048\",\"B01001_049\")\n  ),\n  year = 2022,\n  survey = \"acs5\",\n  progress = FALSE\n) %>% \n  group_by (GEOID) %>%\n  summarise(pop_65 = sum(estimate, na.rm = TRUE))\n\n\ntract_data <- tract_data %>%\n  left_join(age_data, by = \"GEOID\")\n\n\ntract_data %>%\n  summarise(missing_data = sum(is.na(median_household_incomeE)))\n\ntract_data %>%\n  summarise(median_income = sum(median(median_household_incomeE, na.rm = TRUE)))\n\n# Join to tract boundaries\n\ncensus_tracts_joined <- census_tracts %>%\n  left_join(tract_data, by = \"GEOID\")\n```\n\n**Questions to answer:** \n- What year of ACS data are you using? 2022 \n- How many tracts have missing income data? 63 tracts \n- What is the median income across all PA census tracts? $70,188\n\n------------------------------------------------------------------------\n\n#### Step 3: Define Vulnerable Populations\n\nIdentify census tracts with vulnerable populations based on TWO\ncriteria: 1. Low median household income (choose an appropriate\nthreshold) 2. Significant elderly population (choose an appropriate\nthreshold)\n\n**Your Task:**\n\n```{r}\n# Filter for vulnerable tracts based on your criteria\n# Identify vulnerable tracts\nvulnerable_tracts <- census_tracts_joined %>%\n  mutate(\n    percentage_65 = pop_65/total_populationE*100) %>%\n  filter(median_household_incomeE < 53300, percentage_65 >= 20)\n\n# How many?\nnrow(vulnerable_tracts)\n\n```\n\n**Questions to answer:** \n-   What income threshold did you choose and why?\n    I selected $53,300 as the threshold based on the Department of\n    Community and Economic Development’s poverty income guideline for a\n    family of three. I used a family of three as the reference point,\n    assuming a typical household often consists of two parents and one\n    child.\n\n-   What elderly population threshold did you choose and why? According\n    to the World Bank’s definition, a country is considered 'aging' when\n    the share of people aged 65 and older exceeds 7 percent, 'aged' when\n    it reaches 14 percent or more, and 'super-aged' when it surpasses 20\n    percent. I applied the 20 percent elderly population threshold to\n    identify census tracts classified as 'super-aged,' as these areas\n    are more vulnerable.\n\n-   How many tracts meet your vulnerability criteria? 225 tracts\n\n-   What percentage of PA census tracts are considered vulnerable by\n    your definition? 6.53%\n\n------------------------------------------------------------------------\n\n#### Step 4: Calculate Distance to Hospitals\n\nFor each vulnerable tract, calculate the distance to the nearest\nhospital.\n\n**Your Task:**\n\n```{r}\n# Transform to appropriate projected CRS\nvulnerable_tracts_proj <- vulnerable_tracts %>%\n  st_transform(5070) # 5070 is a projected coordinate system appropriate for the US. For south PA alone, we can use 3365 too as an alternative, which is more precise.\n\nhospitals_proj <- hospitals %>%\n  st_transform(5070)\n\n\n# Calculate distance from each tract centroid to nearest hospital\n\ntract_centroids <- st_centroid(vulnerable_tracts_proj)\n\nnearest_hospital_idx <- st_nearest_feature(tract_centroids, hospitals_proj)\n\ndist_to_hospital <- st_distance(\n  tract_centroids,\n  hospitals_proj[nearest_hospital_idx, ],\n  by_element = TRUE\n)\n\n\nvulnerable_tracts_proj <- vulnerable_tracts_proj %>%\n  mutate(\n    dist_to_hospital = as.numeric(dist_to_hospital),\n    dist_to_hospital_mi = dist_to_hospital * 0.000621371\n  )\n\ndistant_data <- vulnerable_tracts_proj %>%\n  summarise(\n    avg_distance = mean(dist_to_hospital_mi, na.rm = TRUE),\n    max_dist = max(dist_to_hospital_mi, na.rm = TRUE),\n  )\n\n\nnum_over15 <- vulnerable_tracts_proj %>%\n  filter(dist_to_hospital_mi > 15) %>%\n  summarise(\n    n_over15 = n(),\n  )\n\n```\n\n**Requirements:** - Use an appropriate projected coordinate system for\nPennsylvania - Calculate distances in miles - Explain why you chose your\nprojection\n\n**Questions to answer:**\n\n-   What is the average distance to the nearest hospital for vulnerable\n    tracts? 4.249839 miles\n-   What is the maximum distance? 18.55538 miles\n-   How many vulnerable tracts are more than 15 miles from the nearest\n    hospital? 12 tracts\n\n------------------------------------------------------------------------\n\n#### Step 5: Identify Underserved Areas\n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles\nfrom the nearest hospital.\n\n**Your Task:**\n\n```{r}\n# Create underserved variable\nundeserved <- vulnerable_tracts_proj %>%\n  filter(dist_to_hospital_mi > 15)\n\n\n\n```\n\n**Questions to answer:** \n- How many tracts are underserved? 12 tracts\n- What percentage of vulnerable tracts are underserved? 12/225*100 = 5.3%\n- Does this surprise you? Why or why not? Yes, it is somewhat surprising. A distance of 15 miles is quite far for accessing hospital care—especially for elderly or low-income populations who may face transportation barriers. The fact that 12 census tracts still have to travel that far indicates persistent geographic inequities in healthcare access across parts of Pennsylvania.\n\n------------------------------------------------------------------------\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics\nabout vulnerable populations and hospital access.\n\n**Your Task:**\n\n```{r}\n# Spatial join tracts to counties\nvulnerable_tracts_proj <- st_transform(vulnerable_tracts_proj, st_crs(pa_counties))\nundeserved  <- st_transform(undeserved , st_crs(pa_counties))\n\n# Aggregate statistics by county\ncounties_num = census_tracts %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_tract =  n(),\n  )%>%\n  arrange(n_tract)\n\ncounties_vuln <- vulnerable_tracts_proj %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_vuln =  n(),\n    avg_dist_vuln_mi = mean(dist_to_hospital_mi, na.rm = TRUE),\n    total_vuln_pop = sum(pop_65, na.rm = TRUE)\n  ) %>%\n  arrange(desc(total_vuln_pop))\n\ncounties_unders <- undeserved %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_unders =  n(),\n  ) %>%\n  arrange(desc(n_unders))\n\n\n\n# Aggregate statistics by county\n\ncounties_stat = counties_num %>%\n  left_join(counties_vuln, by = \"COUNTY_NAM\") %>%\n  left_join(counties_unders, by = \"COUNTY_NAM\") %>%\n  mutate(\n    percentage_unders = n_unders / n_vuln,\n    percentage_vuln = n_vuln / n_tract\n  )%>%\n  arrange(desc(percentage_vuln))\n\n\n\n```\n\n**Required county-level statistics:** \n- Number of vulnerable tracts \n- Number of underserved tracts\n- Percentage of vulnerable tracts that are underserved \n- Average distance to nearest hospital for vulnerable tracts \n- Total vulnerable population\n\n**Questions to answer:** \n- Which 5 counties have the highest percentage of underserved vulnerable tracts? \n  CAMERON 50%\n  FOREST 50%\n  JUNIATA 33%\n  BEDFORD 33%\n  WARREN 30%\n- Which counties have the most vulnerable people living far from hospitals?\n  Philadelphia with 22880 vulnerable people\n- Are there any patterns in where underserved counties are located?\n  Yes. The underserved counties are mostly located in rural and less densely populated areas of Pennsylvania, particularly in the northern and central regions. These areas tend to have fewer hospitals and longer travel distances to healthcare facilities compared to urban centers like Philadelphia or Pittsburgh.\n\n------------------------------------------------------------------------\n\n#### Step 7: Create Summary Table\n\nCreate a professional table showing the top 10 priority counties for\nhealthcare investment.\n\n**Your Task:**\n\n```{r}\n# Create and format priority counties table\n# metrics for the priority: vulnerable index = normalized_number_of_vulnerable_tracts*0.3 + normalized_average_distant _hospital*0.5 + normalized_total_population*0.2\n\nscale_minmax <- function(x) {\n  rng <- range(x, na.rm = TRUE)\n  if (!is.finite(diff(rng)) || diff(rng) == 0) return(rep(0.5, length(x)))\n  (x - rng[1]) / diff(rng)\n}\n\ncounties_stat_index <- counties_stat %>%\n  mutate(\n    n_vuln_norm = scale_minmax(n_vuln),\n    avg_dist_vuln_mi_norm = scale_minmax(avg_dist_vuln_mi),\n    total_vuln_pop_norm = scale_minmax(total_vuln_pop),\n    percentage_vuln_norm = scale_minmax(percentage_vuln)\n  ) %>%\n   mutate(\n     vuln_index =\n       0.3  * n_vuln_norm +\n       0.5 * avg_dist_vuln_mi_norm +\n       0.2 * total_vuln_pop_norm\n   ) %>%\n  arrange(desc(vuln_index))\n\n\n#make table\n\nlibrary(knitr)\n\ncounties_table <- counties_stat_index %>%\n  select(\n    county_name = COUNTY_NAM,\n    vulnerable_index = vuln_index,\n    vulnerable_tract_number = n_vuln,\n    average_dist_to_hospital = avg_dist_vuln_mi,\n    total_vulnerable_pop = total_vuln_pop\n  ) %>%\n  mutate(\n    vulnerable_index = round(vulnerable_index, 3),\n    average_dist_to_hospital = round(average_dist_to_hospital, 2),\n    total_vulnerable_pop = comma(total_vulnerable_pop)\n  )%>%\n  arrange(desc(vulnerable_index))\n\nkable(\n  counties_table,\n  caption = \"PA County-level Vulnerability Summary\",\n  align = \"lcccc\"\n)\n\n\n\n```\n\n**Requirements:** - Use `knitr::kable()` or similar for formatting -\nInclude descriptive column names - Format numbers appropriately (commas\nfor population, percentages, etc.) - Add an informative caption - Sort\nby priority (you decide the metric)\n\n------------------------------------------------------------------------\n\n## Part 2: Comprehensive Visualization\n\nUsing the skills from Week 3 (Data Visualization), create\npublication-quality maps and charts.\n\n### Map 1: County-Level Choropleth\n\nCreate a choropleth map showing healthcare access challenges at the\ncounty level.\n\n**Your Task:**\n\n```{r}\n# Create county-level access map\n# counties by percentage of vulnerable tracts that are underserved\n\nlibrary(ggplot2)\n\ncounties_stat_sf <- pa_counties %>%\n  select(COUNTY_NAM, geometry) %>%\n  left_join(counties_stat, by = \"COUNTY_NAM\")\n\nmap1 <- ggplot() +\n  # county base map\n  geom_sf(\n    data = counties_stat_sf,\n    aes(fill = percentage_vuln),\n    color = \"white\", size = 0.2\n  ) +\n  # hospitals\n  geom_sf(\n    data = hospitals_proj,\n    shape = 21, fill = \"deeppink\",\n    size = 1.8, alpha = 0.9\n  ) +\n  # pink color scale\n  scale_fill_gradient(\n    name = \"% vulnerable tracts\",\n    low = \"#fde0dd\",     # light pink\n    high = \"#c51b8a\",    # deep magenta\n    labels = label_percent(accuracy = 1),\n    limits = c(0, 1)\n  ) +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    legend.title = element_text(size = 10, face = \"bold\"),\n    legend.text  = element_text(size = 9),\n    plot.title   = element_text(face = \"bold\", size = 16, color = \"#7a0177\"),\n    plot.subtitle= element_text(size = 12),\n    plot.caption = element_text(size = 8, color = \"gray30\")\n  ) +\n  labs(\n    title    = \"Healthcare Access Challenges by County\",\n    subtitle = \"Share of vulnerable census tracts\",\n    caption  = \"Source: analysis based on income and percentage of people over 65 years old.\"\n  ) +\n  guides(fill = guide_colorbar(\n    barheight = unit(70, \"pt\"),\n    barwidth  = unit(8,  \"pt\"),\n    ticks.colour = \"black\"\n  ))\n\nmap1\n\n```\n\n**Requirements:** - Fill counties by percentage of vulnerable tracts\nthat are underserved - Include hospital locations as points - Use an\nappropriate color scheme - Include clear title, subtitle, and caption -\nUse `theme_void()` or similar clean theme - Add a legend with formatted\nlabels\n\n------------------------------------------------------------------------\n\n### Map 2: Detailed Vulnerability Map\n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n```{r}\n# Create detailed tract-level map\n\nmap2 <- ggplot() +\n  # tract base map\n  geom_sf(\n    data = census_tracts,\n    color = \"grey85\", size = 0.1\n  ) +\n  # county boundaries\n  geom_sf(\n    data = pa_counties,\n    color = \"goldenrod2\", size = 0.5, fill = NA\n  ) +\n  # hospitals\n  geom_sf(\n    data = hospitals_proj,\n    shape = 16, color = \"darkred\",\n    size = 1, alpha = 0.9\n  ) +\n  # underserved communities (highlighted in yellow)\n  geom_sf(\n    data = undeserved,\n    fill = \"#fff7bc\",      \n    color = \"#fd8d3c\",    \n    size = 0.4\n  ) +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    plot.title   = element_text(face = \"bold\", size = 16, color = \"#b15928\"),\n    plot.subtitle= element_text(size = 12),\n    plot.caption = element_text(size = 8, color = \"gray30\")\n  ) +\n  labs(\n    title    = \"Underserved Communities\",\n    subtitle = \"Yellow tracts represent underserved communities; red points show hospital locations.\"\n  ) +\n  guides(fill = guide_colorbar(\n    barheight = unit(70, \"pt\"),\n    barwidth  = unit(8,  \"pt\"),\n    ticks.colour = \"black\"\n  ))\n\n\nmap2\n\n\n\n```\n\n**Requirements:** - Show underserved vulnerable tracts in a contrasting\ncolor - Include county boundaries for context - Show hospital\nlocations - Use appropriate visual hierarchy (what should stand out?) -\nInclude informative title and subtitle\n\n------------------------------------------------------------------------\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to\nhospitals for vulnerable populations.\n\n**Your Task:**\n\n```{r}\n# Create distribution visualization\n\n# Histogram or density plot of distances\nggplot(vulnerable_tracts_proj) +\n  aes(x = dist_to_hospital_mi) +\n  geom_histogram(bins = 15, fill = \"deeppink\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of distance to the nearest hospital\",\n    x = \"distance to the nearest hospital\",\n    y = \"Number of vulnerable tracts\",\n    caption  = \"Most of tracts have distance between 0 and 5.\"\n  ) +\n  theme_minimal()\n```\n\n\n```{r}\n# Box plot comparing distances across regions\nggplot(vulnerable_tracts_proj) +\n  aes(x = NAMELSADCO, y = dist_to_hospital_mi, fill = NAMELSADCO) +\n  geom_boxplot() +\n  labs(\n    title = \"Distances by County Category\",\n    x = \"County\",\n    y = \"Distance\",\n    caption  = \"While most counties show little variation, some has huge internal differences\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")+\n  theme(\n  axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 7)\n)\n```\n```{r}\n# Bar chart of underserved tracts by county\n# Aggregate number of underserved tracts per county\nunderserved_by_county <- undeserved %>%\n  st_drop_geometry() %>%\n  group_by(NAMELSADCO) %>%\n  summarise(n_underserved = n()) %>%\n  arrange(desc(n_underserved))\n\nggplot(underserved_by_county) +\n  aes(x = reorder(NAMELSADCO, n_underserved), y = n_underserved, fill = n_underserved) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_gradient(low = \"#fde0dd\", high = \"#c51b8a\") +\n  labs(\n    title = \"Number of Underserved Vulnerable Tracts by County\",\n    x = \"County\",\n    y = \"Number of Underserved Tracts\",\n    caption = \"Counties with the highest number of underserved tracts indicate greater healthcare access challenges.\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, color = \"#7a0177\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text.y = element_text(size = 8)\n  )\n```\n\n\n```{r}\n# Scatter plot of distance vs. vulnerable population size\nggplot(vulnerable_tracts_proj) +\n  aes(x = dist_to_hospital_mi, y = total_populationE) +\n  geom_point(color = \"deeppink\", alpha = 0.6, size = 2) +\n  geom_smooth(\n    method = \"lm\",              \n    se = TRUE,                  \n    color = \"darkred\",          \n    fill = \"pink\",              \n    linewidth = 1\n  ) +\n  labs(\n    title = \"distance vs. vulnerable population size\",\n    x = \"Distance to the nearest hospital\",\n    y = \"Vulnerable population size\",\n    caption  = str_wrap(\"More vulnerable population, little distance to hospital. Since hospitals are designed to located near population clusters, and we didn't limit this effect in this study \", width = 90)\n  ) +\n  theme_minimal() +\n  scale_x_continuous() +\n  scale_y_continuous(labels = comma)\n```\n**Suggested chart types:** - Histogram or density plot of distances -\nBox plot comparing distances across regions - Bar chart of underserved\ntracts by county - Scatter plot of distance vs. vulnerable population\nsize\n\n**Requirements:** - Clear axes labels with units - Appropriate title -\nProfessional formatting - Brief interpretation (1-2 sentences as a\ncaption or in text)\n\n------------------------------------------------------------------------\n\n## Part 3: Bring Your Own Data Analysis\n\nChoose your own additional spatial dataset and conduct a supplementary\nanalysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own\nresearch question using OpenDataPhilly data\n(https://opendataphilly.org/datasets/).\n\n**Note these are just loose suggestions to spark ideas - follow or make\nyour own as the data permits and as your ideas evolve. This analysis\nshould include bringing in your own dataset, ensuring the projection/CRS\nof your layers align and are appropriate for the analysis (not lat/long\nor geodetic coordinate systems). The analysis portion should include\nsome combination of spatial and attribute operations to answer a\nrelatively straightforward question**\n\n------------------------------------------------------------------------\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis** - **Data:** Schools,\nLibraries, Recreation Centers, Census tracts (child population) -\n**Question:** \"Which neighborhoods lack adequate educational\ninfrastructure for children?\" - **Operations:** Buffer schools/libraries\n(0.5 mile walking distance), identify coverage gaps, overlay with child\npopulation density - **Policy relevance:** School district planning,\nlibrary placement, after-school program siting\n\n**Option B: School Safety Zones** - **Data:** Schools, Crime Incidents,\nBike Network - **Question:** \"Are school zones safe for walking/biking,\nor are they crime hotspots?\" - **Operations:** Buffer schools (1000ft\nsafety zone), spatial join with crime incidents, assess bike\ninfrastructure coverage - **Policy relevance:** Safe Routes to School\nprograms, crossing guard placement\n\n------------------------------------------------------------------------\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** - **Data:** Parks, Street Trees, Census\ntracts (race/income demographics) - **Question:** \"Do low-income and\nminority neighborhoods have equitable access to green space?\" -\n**Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree\ncanopy or park acreage per capita, compare by demographics - **Policy\nrelevance:** Climate resilience, environmental justice, urban forestry\ninvestment ---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources** - **Data:** Crime Incidents,\nRecreation Centers, Libraries, Street Lights - **Question:** \"Are\nhigh-crime areas underserved by community resources?\" - **Operations:**\nAggregate crime counts to census tracts or neighborhoods, count\ncommunity resources per area, spatial correlation analysis - **Policy\nrelevance:** Community investment, violence prevention strategies ---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility** - **Data:** Polling Places,\nSEPTA stops, Census tracts (elderly population, disability rates) -\n**Question:** \"Are polling places accessible for elderly and disabled\nvoters?\" - **Operations:** Buffer polling places and transit stops,\nidentify vulnerable populations, find areas lacking access - **Policy\nrelevance:** Voting rights, election infrastructure, ADA compliance\n\n------------------------------------------------------------------------\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health** - **Data:** Recreation\nCenters, Playgrounds, Parks, Census tracts (demographics) -\n**Question:** \"Is lack of recreation access associated with vulnerable\npopulations?\" - **Operations:** Calculate recreation facilities per\ncapita by neighborhood, buffer facilities for walking access, overlay\nwith demographic indicators - **Policy relevance:** Public health\ninvestment, recreation programming, obesity prevention\n\n------------------------------------------------------------------------\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage** - **Data:** Fire Stations, EMS\nstations, Population density, High-rise buildings - **Question:** \"Are\npopulation-dense areas adequately covered by emergency services?\" -\n**Operations:** Create service area buffers (5-minute drive = \\~2\nmiles), assess population coverage, identify gaps in high-density\nareas - **Policy relevance:** Emergency preparedness, station siting\ndecisions\n\n------------------------------------------------------------------------\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution** - **Data:** Public Art,\nMuseums, Historic sites/markers, Neighborhoods - **Question:** \"Do all\nneighborhoods have equitable access to cultural amenities?\" -\n**Operations:** Count cultural assets per neighborhood, normalize by\npopulation, compare distribution across demographic groups - **Policy\nrelevance:** Cultural equity, tourism, quality of life, neighborhood\nidentity\n\n------------------------------------------------------------------------\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/ - Most datasets\navailable as GeoJSON, Shapefile, or CSV with coordinates - Always check\nthe Metadata for a data dictionary of the fields.\n\n**Additional Sources:** - **Pennsylvania Open Data:**\nhttps://data.pa.gov/ - **Census Bureau (via tidycensus):** Demographics,\neconomic indicators, commute patterns - **TIGER/Line (via tigris):**\nGeographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with\nmultiple data layers. **If you are a beginner, choose something more\nmanageable that helps you understand the basics**\n\n**If you have a different idea:** Propose your own question! Just make\nsure: - You can access the spatial data - You can perform at least 2\nspatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1.  **Find and load additional data**\n    -   Document your data source\n    -   Check and standardize the CRS\n    -   Provide basic summary statistics\n\n```{r}\n# Load your additional dataset\nlibrary(sf)\n\nschools <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Schools.shp\")\n\ncrime <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/incidents_part1_part2/incidents_part1_part2.shp\")\n\nbike_network <- crime <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Bike_Network/Bike_Network.shp\")\n\n```\n```{r}\nschools <- st_transform(schools, 2272)\ncrime <- st_transform(crime, 2272)\nbike_network <- st_transform(bike_network, 2272)\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## school type\nschools %>%\n  st_drop_geometry() %>%\n  count(type_speci, sort = TRUE) %>%\n  ggplot(aes(x = reorder(type_speci, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"deeppink\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of school types\",\n    x = \"School type\",\n    y = \"Number\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n```{r}\n# Crime Location\ncrime %>%\n  st_drop_geometry() %>%\n  count(STREETNAME) %>%\n  slice_max(order_by = n, n = 10) %>%       # top 10 streets\n  ggplot(aes(x = reorder(STREETNAME, n), y = n)) +\n  geom_col(fill = \"pink\") +\n  coord_flip() +                            # flip for readability\n  labs(\n    title = \"Top 10 Streets by Number of Crime Incidents\",\n    x = \"Street\",\n    y = \"Number of Incidents\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    axis.text.y = element_text(size = 10)\n  )\n```\n\n\n```{r}\n#crime types\ncrime %>%\n  st_drop_geometry() %>%\n  count(TYPE, sort = TRUE) %>%\n  slice_max(n, n = 10) %>%  \n  ggplot(aes(x = reorder(TYPE, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  coord_flip() +\n  labs(\n    title = \"Top 10 Crime Types\",\n    x = \"Types\",\n    y = \"Number of incidents\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n\n\n```{r}\n# Bike lane\nbike_length_summary <- bike_network %>%\n  st_drop_geometry() %>%\n  group_by(TYPE) %>%\n  summarise(total_length = sum(Shape__Len, na.rm = TRUE)) %>%\n  arrange(desc(total_length))\n\nggplot(bike_length_summary, aes(x = reorder(TYPE, total_length), y = total_length)) +\n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of Bike Lane Type\",\n    x = \"Type\",\n    y = \"Total Length\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n\n**Questions to answer:** \n- What dataset did you choose and why? \n  I used the Schools, Crime Incidents, and Bike Network datasets. My goal was to assess whether school zones in   Philadelphia are safe for walking and biking, or if they coincide with areas of higher crime concentration.\n- What is the data source and date? \n  All datasets were obtained from OpenDataPhilly (2025).\n- How many features does it contain? \n  Each dataset includes spatial geometry, allowing for spatial analysis. The Schools dataset contains 15 variables, while both the Crime Incidents and Bike Network datasets each include 9 variables.\n- What CRS is it in? Did you need to transform it?\n  All datasets were initially in WGS 84 / Pseudo-Mercator. I transformed them to EPSG:2272 (NAD83 / Pennsylvania South), which is more suitable for accurate spatial analysis in southern Pennsylvania.\n\n------------------------------------------------------------------------\n\n2.  **Pose a research question**\n\n\"Are school zones safe for walking/biking, or are they crime hotspots?\"\n\n------------------------------------------------------------------------\n\n3.  **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):** - Buffers - Spatial joins - Spatial\nfiltering with predicates - Distance calculations - Intersections or\nunions - Point-in-polygon aggregation\n\n**Your Task:**\n\n```{r}\n# Your spatial analysis\n# Create school buffers of 500 meters ≈ 1640 feet\nschool_buffers <- st_buffer(schools, dist = 1640)\n\n# Find crimes within school buffers\ncrime_near_schools <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)\n\n# Summarize crimes per school\ncrime_summary <- crime_near_schools %>%\n  st_drop_geometry() %>%\n  count(SCHOOL_NAME = school_nam, sort = TRUE)\n\nhead(crime_summary, 10)\n```\n\n\n```{r}\n# Compare crimes inside vs outside school zones\ncrime$in_school_zone <- lengths(st_intersects(crime, school_buffers)) > 0\n\ncrime %>%\n  st_drop_geometry() %>%\n  count(in_school_zone) %>%\n  mutate(percent = n / sum(n) * 100)\n```\n\n\n```{r}\n# Overlay bike network with school zones\nbike_near_schools <- st_intersection(bike_network, school_buffers)\ncrime_on_bikelanes <- st_join(crime, bike_near_schools, join = st_intersects, left = FALSE) %>%\n  distinct(geometry, .keep_all = TRUE)\n\n```\n```{r}\nlibrary(ggplot2)\nlibrary(sf)\n\n# Map\nggplot() +\n  # School buffers\n  geom_sf(data = school_buffers, fill = \"#fde0dd\", color = \"#c51b8a\", alpha = 0.4) +\n  # Schools\n  geom_sf(data = schools, shape = 21, fill = \"deeppink\", color = \"white\", size = 2) +\n  # Crimes\n  geom_sf(data = crime, shape = 16, color = \"red\", alpha = 0.6, size = 1) +\n  # Optional: bike lanes\n  geom_sf(data = bike_network, color = \"goldenrod2\", size = 0.6, alpha = 0.7) +\n  coord_sf() +\n  theme_minimal(base_size = 12) +\n  labs(\n    title = \"Crime Incidents and School Buffers in Philadelphia\",\n    subtitle = \"Pink circles = schools; shaded areas = 500m buffers (~1640 ft); red dots = crime incidents; gold = bike lanes\",\n    caption = \"Data: OpenDataPhilly, 2025\"\n  )\n\n```\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Spatial join: assign crimes to schools via buffer intersection\ncrime_with_school <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)\n\n# Count number of crimes per school\nschool_crime_counts <- crime_with_school %>%\n  st_drop_geometry() %>%\n  group_by(SCHOOL_NAME = school_nam) %>%\n  summarise(crime_count = n()) %>%\n  arrange(desc(crime_count))\n\n# View top 10 schools with most nearby crimes\nhead(school_crime_counts, 10)\n\n# Create points on surface for each school buffer\nzone_points <- school_buffers %>%\n  left_join(school_crime_counts, by = c(\"school_nam\" = \"SCHOOL_NAME\")) %>%\n  mutate(\n    geometry = st_point_on_surface(geometry)  # one point per buffer\n  ) %>%\n  st_as_sf()\n\n# Get tracts of Philly\ntracts_phl <- get_acs(\n  geography = \"tract\",\n  state     = \"PA\",\n  county    = \"Philadelphia\",\n  variables = \"B01003_001\",\n  survey    = \"acs5\",\n  year      = 2022,\n  geometry  = TRUE,\n  cache_table = TRUE\n) %>%\n  select(GEOID, NAME, pop = estimate, geometry) %>%\n  st_transform(2272)    \n\n# Map: crime counts by school zone\nggplot() +\n  # base map: Philadelphia tracts\n  geom_sf(data = tracts_phl, fill = NA, color = \"grey70\", linewidth = 0.2) +\n  # school zone points sized by crime count\n  geom_sf(data = zone_points, aes(size = crime_count), color = \"firebrick\", alpha = 0.6) +\n  scale_size_continuous(name = \"Crime Count\", range = c(1, 6)) +\n  labs(\n    title = \"Crime Counts Around School Zones\",\n    subtitle = \"Point size represents number of crimes within 500m (~1640 ft) of each school\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(legend.position = \"right\")\n```\n\n**Analysis requirements:** - Clear code comments explaining each step -\nAppropriate CRS transformations - Summary statistics or counts - At\nleast one map showing your findings - Brief interpretation of results\n(3-5 sentences)\n\n**Your interpretation:**\n\nFindings:\nThe vast majority of crimes occur within school zones, and all crimes along bike lanes are located within these zones. This suggests that students walking or biking are frequently exposed to areas with higher crime activity.\n\nPolicy Implications:\n\n- Safe Routes to School programs could guide students along safer pathways.\n- Crossing guards, improved lighting, and increased supervision at key intersections may help reduce risk.\n- Targeted interventions on bike lanes near schools could further enhance walking and biking safety for students.\n\n## Finally - A few comments about your incorporation of feedback!\n\nI’ve hidden my API key this time and printed the output only to the console, not in the Markdown.\n\n------------------------------------------------------------------------\n\n## Submission Requirements\n\n**What to submit:**\n\n1.  **Rendered HTML document posted to your course portfolio** with all\n    code, outputs, maps, and text\n    -   Use `embed-resources: true` in YAML so it's a single file\n    -   All code should run without errors\n    -   All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and\n`LastName_FirstName_Assignment2.qmd`\n\n------------------------------------------------------------------------","srcMarkdownNoYaml":"\n\n## Assignment Overview\n\n**Learning Objectives:** - Apply spatial operations to answer\npolicy-relevant research questions - Integrate census demographic data\nwith spatial analysis - Create publication-quality visualizations and\nmaps - Work with spatial data from multiple sources - Communicate\nfindings effectively for policy audiences\n\n------------------------------------------------------------------------\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable\npopulations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for\nhealthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and\nbrief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data: - Pennsylvania county boundaries -\nPennsylvania hospitals (from lecture data) - Pennsylvania census tracts\n\n**Your Task:**\n\n```{r}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\noptions(tigris_use_cache = TRUE)\noptions(tigris_progress = FALSE)  # Suppress tigris progress bars\n\n# Set your Census API key\ncensus_api_key(Sys.getenv(\"your_API_key\"))\n\n# Load spatial data\npa_counties <- st_read(here(\"assignments/assignment2/scripts/data/Pennsylvania_County_Boundaries.shp\"))\nhospitals <- st_read(here(\"assignments/assignment2/scripts/data/hospitals.geojson\"))\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, progress = FALSE)\n\n# Standardize CRS\nst_crs(pa_counties)\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\n# Check that all data loaded correctly\nhead(pa_counties)\nhead(hospitals)\nhead(census_tracts)\n```\n\n**Questions to answer:** \n- How many hospitals are in your dataset? 223 hospitals \n- How many census tracts? 3445 census tracts \n- What coordinate reference system is each dataset in? WGS 84 / Pseudo-Mercator\n\n------------------------------------------------------------------------\n\n#### Step 2: Get Demographic Data\n\nUse `tidycensus` to download tract-level demographic data for\nPennsylvania.\n\n**Required variables:** - Total population - Median household income -\nPopulation 65 years and over (you may need to sum multiple age\ncategories)\n\n**Your Task:**\n\n```{r}\n# Get demographic data from ACS\n# Get demographic data from ACS\ntract_data <- get_acs(\n  geography = \"tract\",\n  state     = \"42\",\n  variables = c(\n    total_population = \"B01003_001\",\n    median_household_income = \"B19013_001\"\n  ),\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\",\n  progress = FALSE\n)\n\nage_data <- get_acs(\n  geography = \"tract\",\n  state     = \"42\",\n  variables = c(\n    male_65 <- c(\"B01001_020\",\"B01001_021\",\"B01001_022\",\"B01001_023\",\"B01001_024\",\"B01001_025\"),\n    female_65 <- c(\"B01001_044\",\"B01001_045\",\"B01001_046\",\"B01001_047\",\"B01001_048\",\"B01001_049\")\n  ),\n  year = 2022,\n  survey = \"acs5\",\n  progress = FALSE\n) %>% \n  group_by (GEOID) %>%\n  summarise(pop_65 = sum(estimate, na.rm = TRUE))\n\n\ntract_data <- tract_data %>%\n  left_join(age_data, by = \"GEOID\")\n\n\ntract_data %>%\n  summarise(missing_data = sum(is.na(median_household_incomeE)))\n\ntract_data %>%\n  summarise(median_income = sum(median(median_household_incomeE, na.rm = TRUE)))\n\n# Join to tract boundaries\n\ncensus_tracts_joined <- census_tracts %>%\n  left_join(tract_data, by = \"GEOID\")\n```\n\n**Questions to answer:** \n- What year of ACS data are you using? 2022 \n- How many tracts have missing income data? 63 tracts \n- What is the median income across all PA census tracts? $70,188\n\n------------------------------------------------------------------------\n\n#### Step 3: Define Vulnerable Populations\n\nIdentify census tracts with vulnerable populations based on TWO\ncriteria: 1. Low median household income (choose an appropriate\nthreshold) 2. Significant elderly population (choose an appropriate\nthreshold)\n\n**Your Task:**\n\n```{r}\n# Filter for vulnerable tracts based on your criteria\n# Identify vulnerable tracts\nvulnerable_tracts <- census_tracts_joined %>%\n  mutate(\n    percentage_65 = pop_65/total_populationE*100) %>%\n  filter(median_household_incomeE < 53300, percentage_65 >= 20)\n\n# How many?\nnrow(vulnerable_tracts)\n\n```\n\n**Questions to answer:** \n-   What income threshold did you choose and why?\n    I selected $53,300 as the threshold based on the Department of\n    Community and Economic Development’s poverty income guideline for a\n    family of three. I used a family of three as the reference point,\n    assuming a typical household often consists of two parents and one\n    child.\n\n-   What elderly population threshold did you choose and why? According\n    to the World Bank’s definition, a country is considered 'aging' when\n    the share of people aged 65 and older exceeds 7 percent, 'aged' when\n    it reaches 14 percent or more, and 'super-aged' when it surpasses 20\n    percent. I applied the 20 percent elderly population threshold to\n    identify census tracts classified as 'super-aged,' as these areas\n    are more vulnerable.\n\n-   How many tracts meet your vulnerability criteria? 225 tracts\n\n-   What percentage of PA census tracts are considered vulnerable by\n    your definition? 6.53%\n\n------------------------------------------------------------------------\n\n#### Step 4: Calculate Distance to Hospitals\n\nFor each vulnerable tract, calculate the distance to the nearest\nhospital.\n\n**Your Task:**\n\n```{r}\n# Transform to appropriate projected CRS\nvulnerable_tracts_proj <- vulnerable_tracts %>%\n  st_transform(5070) # 5070 is a projected coordinate system appropriate for the US. For south PA alone, we can use 3365 too as an alternative, which is more precise.\n\nhospitals_proj <- hospitals %>%\n  st_transform(5070)\n\n\n# Calculate distance from each tract centroid to nearest hospital\n\ntract_centroids <- st_centroid(vulnerable_tracts_proj)\n\nnearest_hospital_idx <- st_nearest_feature(tract_centroids, hospitals_proj)\n\ndist_to_hospital <- st_distance(\n  tract_centroids,\n  hospitals_proj[nearest_hospital_idx, ],\n  by_element = TRUE\n)\n\n\nvulnerable_tracts_proj <- vulnerable_tracts_proj %>%\n  mutate(\n    dist_to_hospital = as.numeric(dist_to_hospital),\n    dist_to_hospital_mi = dist_to_hospital * 0.000621371\n  )\n\ndistant_data <- vulnerable_tracts_proj %>%\n  summarise(\n    avg_distance = mean(dist_to_hospital_mi, na.rm = TRUE),\n    max_dist = max(dist_to_hospital_mi, na.rm = TRUE),\n  )\n\n\nnum_over15 <- vulnerable_tracts_proj %>%\n  filter(dist_to_hospital_mi > 15) %>%\n  summarise(\n    n_over15 = n(),\n  )\n\n```\n\n**Requirements:** - Use an appropriate projected coordinate system for\nPennsylvania - Calculate distances in miles - Explain why you chose your\nprojection\n\n**Questions to answer:**\n\n-   What is the average distance to the nearest hospital for vulnerable\n    tracts? 4.249839 miles\n-   What is the maximum distance? 18.55538 miles\n-   How many vulnerable tracts are more than 15 miles from the nearest\n    hospital? 12 tracts\n\n------------------------------------------------------------------------\n\n#### Step 5: Identify Underserved Areas\n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles\nfrom the nearest hospital.\n\n**Your Task:**\n\n```{r}\n# Create underserved variable\nundeserved <- vulnerable_tracts_proj %>%\n  filter(dist_to_hospital_mi > 15)\n\n\n\n```\n\n**Questions to answer:** \n- How many tracts are underserved? 12 tracts\n- What percentage of vulnerable tracts are underserved? 12/225*100 = 5.3%\n- Does this surprise you? Why or why not? Yes, it is somewhat surprising. A distance of 15 miles is quite far for accessing hospital care—especially for elderly or low-income populations who may face transportation barriers. The fact that 12 census tracts still have to travel that far indicates persistent geographic inequities in healthcare access across parts of Pennsylvania.\n\n------------------------------------------------------------------------\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics\nabout vulnerable populations and hospital access.\n\n**Your Task:**\n\n```{r}\n# Spatial join tracts to counties\nvulnerable_tracts_proj <- st_transform(vulnerable_tracts_proj, st_crs(pa_counties))\nundeserved  <- st_transform(undeserved , st_crs(pa_counties))\n\n# Aggregate statistics by county\ncounties_num = census_tracts %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_tract =  n(),\n  )%>%\n  arrange(n_tract)\n\ncounties_vuln <- vulnerable_tracts_proj %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_vuln =  n(),\n    avg_dist_vuln_mi = mean(dist_to_hospital_mi, na.rm = TRUE),\n    total_vuln_pop = sum(pop_65, na.rm = TRUE)\n  ) %>%\n  arrange(desc(total_vuln_pop))\n\ncounties_unders <- undeserved %>%\n  st_centroid() %>%\n  st_join(pa_counties%>% select(COUNTY_NAM)) %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    n_unders =  n(),\n  ) %>%\n  arrange(desc(n_unders))\n\n\n\n# Aggregate statistics by county\n\ncounties_stat = counties_num %>%\n  left_join(counties_vuln, by = \"COUNTY_NAM\") %>%\n  left_join(counties_unders, by = \"COUNTY_NAM\") %>%\n  mutate(\n    percentage_unders = n_unders / n_vuln,\n    percentage_vuln = n_vuln / n_tract\n  )%>%\n  arrange(desc(percentage_vuln))\n\n\n\n```\n\n**Required county-level statistics:** \n- Number of vulnerable tracts \n- Number of underserved tracts\n- Percentage of vulnerable tracts that are underserved \n- Average distance to nearest hospital for vulnerable tracts \n- Total vulnerable population\n\n**Questions to answer:** \n- Which 5 counties have the highest percentage of underserved vulnerable tracts? \n  CAMERON 50%\n  FOREST 50%\n  JUNIATA 33%\n  BEDFORD 33%\n  WARREN 30%\n- Which counties have the most vulnerable people living far from hospitals?\n  Philadelphia with 22880 vulnerable people\n- Are there any patterns in where underserved counties are located?\n  Yes. The underserved counties are mostly located in rural and less densely populated areas of Pennsylvania, particularly in the northern and central regions. These areas tend to have fewer hospitals and longer travel distances to healthcare facilities compared to urban centers like Philadelphia or Pittsburgh.\n\n------------------------------------------------------------------------\n\n#### Step 7: Create Summary Table\n\nCreate a professional table showing the top 10 priority counties for\nhealthcare investment.\n\n**Your Task:**\n\n```{r}\n# Create and format priority counties table\n# metrics for the priority: vulnerable index = normalized_number_of_vulnerable_tracts*0.3 + normalized_average_distant _hospital*0.5 + normalized_total_population*0.2\n\nscale_minmax <- function(x) {\n  rng <- range(x, na.rm = TRUE)\n  if (!is.finite(diff(rng)) || diff(rng) == 0) return(rep(0.5, length(x)))\n  (x - rng[1]) / diff(rng)\n}\n\ncounties_stat_index <- counties_stat %>%\n  mutate(\n    n_vuln_norm = scale_minmax(n_vuln),\n    avg_dist_vuln_mi_norm = scale_minmax(avg_dist_vuln_mi),\n    total_vuln_pop_norm = scale_minmax(total_vuln_pop),\n    percentage_vuln_norm = scale_minmax(percentage_vuln)\n  ) %>%\n   mutate(\n     vuln_index =\n       0.3  * n_vuln_norm +\n       0.5 * avg_dist_vuln_mi_norm +\n       0.2 * total_vuln_pop_norm\n   ) %>%\n  arrange(desc(vuln_index))\n\n\n#make table\n\nlibrary(knitr)\n\ncounties_table <- counties_stat_index %>%\n  select(\n    county_name = COUNTY_NAM,\n    vulnerable_index = vuln_index,\n    vulnerable_tract_number = n_vuln,\n    average_dist_to_hospital = avg_dist_vuln_mi,\n    total_vulnerable_pop = total_vuln_pop\n  ) %>%\n  mutate(\n    vulnerable_index = round(vulnerable_index, 3),\n    average_dist_to_hospital = round(average_dist_to_hospital, 2),\n    total_vulnerable_pop = comma(total_vulnerable_pop)\n  )%>%\n  arrange(desc(vulnerable_index))\n\nkable(\n  counties_table,\n  caption = \"PA County-level Vulnerability Summary\",\n  align = \"lcccc\"\n)\n\n\n\n```\n\n**Requirements:** - Use `knitr::kable()` or similar for formatting -\nInclude descriptive column names - Format numbers appropriately (commas\nfor population, percentages, etc.) - Add an informative caption - Sort\nby priority (you decide the metric)\n\n------------------------------------------------------------------------\n\n## Part 2: Comprehensive Visualization\n\nUsing the skills from Week 3 (Data Visualization), create\npublication-quality maps and charts.\n\n### Map 1: County-Level Choropleth\n\nCreate a choropleth map showing healthcare access challenges at the\ncounty level.\n\n**Your Task:**\n\n```{r}\n# Create county-level access map\n# counties by percentage of vulnerable tracts that are underserved\n\nlibrary(ggplot2)\n\ncounties_stat_sf <- pa_counties %>%\n  select(COUNTY_NAM, geometry) %>%\n  left_join(counties_stat, by = \"COUNTY_NAM\")\n\nmap1 <- ggplot() +\n  # county base map\n  geom_sf(\n    data = counties_stat_sf,\n    aes(fill = percentage_vuln),\n    color = \"white\", size = 0.2\n  ) +\n  # hospitals\n  geom_sf(\n    data = hospitals_proj,\n    shape = 21, fill = \"deeppink\",\n    size = 1.8, alpha = 0.9\n  ) +\n  # pink color scale\n  scale_fill_gradient(\n    name = \"% vulnerable tracts\",\n    low = \"#fde0dd\",     # light pink\n    high = \"#c51b8a\",    # deep magenta\n    labels = label_percent(accuracy = 1),\n    limits = c(0, 1)\n  ) +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    legend.title = element_text(size = 10, face = \"bold\"),\n    legend.text  = element_text(size = 9),\n    plot.title   = element_text(face = \"bold\", size = 16, color = \"#7a0177\"),\n    plot.subtitle= element_text(size = 12),\n    plot.caption = element_text(size = 8, color = \"gray30\")\n  ) +\n  labs(\n    title    = \"Healthcare Access Challenges by County\",\n    subtitle = \"Share of vulnerable census tracts\",\n    caption  = \"Source: analysis based on income and percentage of people over 65 years old.\"\n  ) +\n  guides(fill = guide_colorbar(\n    barheight = unit(70, \"pt\"),\n    barwidth  = unit(8,  \"pt\"),\n    ticks.colour = \"black\"\n  ))\n\nmap1\n\n```\n\n**Requirements:** - Fill counties by percentage of vulnerable tracts\nthat are underserved - Include hospital locations as points - Use an\nappropriate color scheme - Include clear title, subtitle, and caption -\nUse `theme_void()` or similar clean theme - Add a legend with formatted\nlabels\n\n------------------------------------------------------------------------\n\n### Map 2: Detailed Vulnerability Map\n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n```{r}\n# Create detailed tract-level map\n\nmap2 <- ggplot() +\n  # tract base map\n  geom_sf(\n    data = census_tracts,\n    color = \"grey85\", size = 0.1\n  ) +\n  # county boundaries\n  geom_sf(\n    data = pa_counties,\n    color = \"goldenrod2\", size = 0.5, fill = NA\n  ) +\n  # hospitals\n  geom_sf(\n    data = hospitals_proj,\n    shape = 16, color = \"darkred\",\n    size = 1, alpha = 0.9\n  ) +\n  # underserved communities (highlighted in yellow)\n  geom_sf(\n    data = undeserved,\n    fill = \"#fff7bc\",      \n    color = \"#fd8d3c\",    \n    size = 0.4\n  ) +\n  coord_sf() +\n  theme_void(base_size = 12) +\n  theme(\n    plot.title   = element_text(face = \"bold\", size = 16, color = \"#b15928\"),\n    plot.subtitle= element_text(size = 12),\n    plot.caption = element_text(size = 8, color = \"gray30\")\n  ) +\n  labs(\n    title    = \"Underserved Communities\",\n    subtitle = \"Yellow tracts represent underserved communities; red points show hospital locations.\"\n  ) +\n  guides(fill = guide_colorbar(\n    barheight = unit(70, \"pt\"),\n    barwidth  = unit(8,  \"pt\"),\n    ticks.colour = \"black\"\n  ))\n\n\nmap2\n\n\n\n```\n\n**Requirements:** - Show underserved vulnerable tracts in a contrasting\ncolor - Include county boundaries for context - Show hospital\nlocations - Use appropriate visual hierarchy (what should stand out?) -\nInclude informative title and subtitle\n\n------------------------------------------------------------------------\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to\nhospitals for vulnerable populations.\n\n**Your Task:**\n\n```{r}\n# Create distribution visualization\n\n# Histogram or density plot of distances\nggplot(vulnerable_tracts_proj) +\n  aes(x = dist_to_hospital_mi) +\n  geom_histogram(bins = 15, fill = \"deeppink\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of distance to the nearest hospital\",\n    x = \"distance to the nearest hospital\",\n    y = \"Number of vulnerable tracts\",\n    caption  = \"Most of tracts have distance between 0 and 5.\"\n  ) +\n  theme_minimal()\n```\n\n\n```{r}\n# Box plot comparing distances across regions\nggplot(vulnerable_tracts_proj) +\n  aes(x = NAMELSADCO, y = dist_to_hospital_mi, fill = NAMELSADCO) +\n  geom_boxplot() +\n  labs(\n    title = \"Distances by County Category\",\n    x = \"County\",\n    y = \"Distance\",\n    caption  = \"While most counties show little variation, some has huge internal differences\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")+\n  theme(\n  axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 7)\n)\n```\n```{r}\n# Bar chart of underserved tracts by county\n# Aggregate number of underserved tracts per county\nunderserved_by_county <- undeserved %>%\n  st_drop_geometry() %>%\n  group_by(NAMELSADCO) %>%\n  summarise(n_underserved = n()) %>%\n  arrange(desc(n_underserved))\n\nggplot(underserved_by_county) +\n  aes(x = reorder(NAMELSADCO, n_underserved), y = n_underserved, fill = n_underserved) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_gradient(low = \"#fde0dd\", high = \"#c51b8a\") +\n  labs(\n    title = \"Number of Underserved Vulnerable Tracts by County\",\n    x = \"County\",\n    y = \"Number of Underserved Tracts\",\n    caption = \"Counties with the highest number of underserved tracts indicate greater healthcare access challenges.\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, color = \"#7a0177\"),\n    plot.subtitle = element_text(size = 12),\n    axis.text.y = element_text(size = 8)\n  )\n```\n\n\n```{r}\n# Scatter plot of distance vs. vulnerable population size\nggplot(vulnerable_tracts_proj) +\n  aes(x = dist_to_hospital_mi, y = total_populationE) +\n  geom_point(color = \"deeppink\", alpha = 0.6, size = 2) +\n  geom_smooth(\n    method = \"lm\",              \n    se = TRUE,                  \n    color = \"darkred\",          \n    fill = \"pink\",              \n    linewidth = 1\n  ) +\n  labs(\n    title = \"distance vs. vulnerable population size\",\n    x = \"Distance to the nearest hospital\",\n    y = \"Vulnerable population size\",\n    caption  = str_wrap(\"More vulnerable population, little distance to hospital. Since hospitals are designed to located near population clusters, and we didn't limit this effect in this study \", width = 90)\n  ) +\n  theme_minimal() +\n  scale_x_continuous() +\n  scale_y_continuous(labels = comma)\n```\n**Suggested chart types:** - Histogram or density plot of distances -\nBox plot comparing distances across regions - Bar chart of underserved\ntracts by county - Scatter plot of distance vs. vulnerable population\nsize\n\n**Requirements:** - Clear axes labels with units - Appropriate title -\nProfessional formatting - Brief interpretation (1-2 sentences as a\ncaption or in text)\n\n------------------------------------------------------------------------\n\n## Part 3: Bring Your Own Data Analysis\n\nChoose your own additional spatial dataset and conduct a supplementary\nanalysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own\nresearch question using OpenDataPhilly data\n(https://opendataphilly.org/datasets/).\n\n**Note these are just loose suggestions to spark ideas - follow or make\nyour own as the data permits and as your ideas evolve. This analysis\nshould include bringing in your own dataset, ensuring the projection/CRS\nof your layers align and are appropriate for the analysis (not lat/long\nor geodetic coordinate systems). The analysis portion should include\nsome combination of spatial and attribute operations to answer a\nrelatively straightforward question**\n\n------------------------------------------------------------------------\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis** - **Data:** Schools,\nLibraries, Recreation Centers, Census tracts (child population) -\n**Question:** \"Which neighborhoods lack adequate educational\ninfrastructure for children?\" - **Operations:** Buffer schools/libraries\n(0.5 mile walking distance), identify coverage gaps, overlay with child\npopulation density - **Policy relevance:** School district planning,\nlibrary placement, after-school program siting\n\n**Option B: School Safety Zones** - **Data:** Schools, Crime Incidents,\nBike Network - **Question:** \"Are school zones safe for walking/biking,\nor are they crime hotspots?\" - **Operations:** Buffer schools (1000ft\nsafety zone), spatial join with crime incidents, assess bike\ninfrastructure coverage - **Policy relevance:** Safe Routes to School\nprograms, crossing guard placement\n\n------------------------------------------------------------------------\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** - **Data:** Parks, Street Trees, Census\ntracts (race/income demographics) - **Question:** \"Do low-income and\nminority neighborhoods have equitable access to green space?\" -\n**Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree\ncanopy or park acreage per capita, compare by demographics - **Policy\nrelevance:** Climate resilience, environmental justice, urban forestry\ninvestment ---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources** - **Data:** Crime Incidents,\nRecreation Centers, Libraries, Street Lights - **Question:** \"Are\nhigh-crime areas underserved by community resources?\" - **Operations:**\nAggregate crime counts to census tracts or neighborhoods, count\ncommunity resources per area, spatial correlation analysis - **Policy\nrelevance:** Community investment, violence prevention strategies ---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility** - **Data:** Polling Places,\nSEPTA stops, Census tracts (elderly population, disability rates) -\n**Question:** \"Are polling places accessible for elderly and disabled\nvoters?\" - **Operations:** Buffer polling places and transit stops,\nidentify vulnerable populations, find areas lacking access - **Policy\nrelevance:** Voting rights, election infrastructure, ADA compliance\n\n------------------------------------------------------------------------\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health** - **Data:** Recreation\nCenters, Playgrounds, Parks, Census tracts (demographics) -\n**Question:** \"Is lack of recreation access associated with vulnerable\npopulations?\" - **Operations:** Calculate recreation facilities per\ncapita by neighborhood, buffer facilities for walking access, overlay\nwith demographic indicators - **Policy relevance:** Public health\ninvestment, recreation programming, obesity prevention\n\n------------------------------------------------------------------------\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage** - **Data:** Fire Stations, EMS\nstations, Population density, High-rise buildings - **Question:** \"Are\npopulation-dense areas adequately covered by emergency services?\" -\n**Operations:** Create service area buffers (5-minute drive = \\~2\nmiles), assess population coverage, identify gaps in high-density\nareas - **Policy relevance:** Emergency preparedness, station siting\ndecisions\n\n------------------------------------------------------------------------\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution** - **Data:** Public Art,\nMuseums, Historic sites/markers, Neighborhoods - **Question:** \"Do all\nneighborhoods have equitable access to cultural amenities?\" -\n**Operations:** Count cultural assets per neighborhood, normalize by\npopulation, compare distribution across demographic groups - **Policy\nrelevance:** Cultural equity, tourism, quality of life, neighborhood\nidentity\n\n------------------------------------------------------------------------\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/ - Most datasets\navailable as GeoJSON, Shapefile, or CSV with coordinates - Always check\nthe Metadata for a data dictionary of the fields.\n\n**Additional Sources:** - **Pennsylvania Open Data:**\nhttps://data.pa.gov/ - **Census Bureau (via tidycensus):** Demographics,\neconomic indicators, commute patterns - **TIGER/Line (via tigris):**\nGeographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with\nmultiple data layers. **If you are a beginner, choose something more\nmanageable that helps you understand the basics**\n\n**If you have a different idea:** Propose your own question! Just make\nsure: - You can access the spatial data - You can perform at least 2\nspatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1.  **Find and load additional data**\n    -   Document your data source\n    -   Check and standardize the CRS\n    -   Provide basic summary statistics\n\n```{r}\n# Load your additional dataset\nlibrary(sf)\n\nschools <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Schools.shp\")\n\ncrime <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/incidents_part1_part2/incidents_part1_part2.shp\")\n\nbike_network <- crime <- st_read(\"C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Bike_Network/Bike_Network.shp\")\n\n```\n```{r}\nschools <- st_transform(schools, 2272)\ncrime <- st_transform(crime, 2272)\nbike_network <- st_transform(bike_network, 2272)\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n## school type\nschools %>%\n  st_drop_geometry() %>%\n  count(type_speci, sort = TRUE) %>%\n  ggplot(aes(x = reorder(type_speci, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"deeppink\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of school types\",\n    x = \"School type\",\n    y = \"Number\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n```{r}\n# Crime Location\ncrime %>%\n  st_drop_geometry() %>%\n  count(STREETNAME) %>%\n  slice_max(order_by = n, n = 10) %>%       # top 10 streets\n  ggplot(aes(x = reorder(STREETNAME, n), y = n)) +\n  geom_col(fill = \"pink\") +\n  coord_flip() +                            # flip for readability\n  labs(\n    title = \"Top 10 Streets by Number of Crime Incidents\",\n    x = \"Street\",\n    y = \"Number of Incidents\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    axis.text.y = element_text(size = 10)\n  )\n```\n\n\n```{r}\n#crime types\ncrime %>%\n  st_drop_geometry() %>%\n  count(TYPE, sort = TRUE) %>%\n  slice_max(n, n = 10) %>%  \n  ggplot(aes(x = reorder(TYPE, n), y = n)) +\n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  coord_flip() +\n  labs(\n    title = \"Top 10 Crime Types\",\n    x = \"Types\",\n    y = \"Number of incidents\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n\n\n```{r}\n# Bike lane\nbike_length_summary <- bike_network %>%\n  st_drop_geometry() %>%\n  group_by(TYPE) %>%\n  summarise(total_length = sum(Shape__Len, na.rm = TRUE)) %>%\n  arrange(desc(total_length))\n\nggplot(bike_length_summary, aes(x = reorder(TYPE, total_length), y = total_length)) +\n  geom_bar(stat = \"identity\", fill = \"pink\") +\n  coord_flip() +\n  labs(\n    title = \"Distribution of Bike Lane Type\",\n    x = \"Type\",\n    y = \"Total Length\"\n  ) +\n  theme_minimal(base_size = 13)\n```\n\n**Questions to answer:** \n- What dataset did you choose and why? \n  I used the Schools, Crime Incidents, and Bike Network datasets. My goal was to assess whether school zones in   Philadelphia are safe for walking and biking, or if they coincide with areas of higher crime concentration.\n- What is the data source and date? \n  All datasets were obtained from OpenDataPhilly (2025).\n- How many features does it contain? \n  Each dataset includes spatial geometry, allowing for spatial analysis. The Schools dataset contains 15 variables, while both the Crime Incidents and Bike Network datasets each include 9 variables.\n- What CRS is it in? Did you need to transform it?\n  All datasets were initially in WGS 84 / Pseudo-Mercator. I transformed them to EPSG:2272 (NAD83 / Pennsylvania South), which is more suitable for accurate spatial analysis in southern Pennsylvania.\n\n------------------------------------------------------------------------\n\n2.  **Pose a research question**\n\n\"Are school zones safe for walking/biking, or are they crime hotspots?\"\n\n------------------------------------------------------------------------\n\n3.  **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):** - Buffers - Spatial joins - Spatial\nfiltering with predicates - Distance calculations - Intersections or\nunions - Point-in-polygon aggregation\n\n**Your Task:**\n\n```{r}\n# Your spatial analysis\n# Create school buffers of 500 meters ≈ 1640 feet\nschool_buffers <- st_buffer(schools, dist = 1640)\n\n# Find crimes within school buffers\ncrime_near_schools <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)\n\n# Summarize crimes per school\ncrime_summary <- crime_near_schools %>%\n  st_drop_geometry() %>%\n  count(SCHOOL_NAME = school_nam, sort = TRUE)\n\nhead(crime_summary, 10)\n```\n\n\n```{r}\n# Compare crimes inside vs outside school zones\ncrime$in_school_zone <- lengths(st_intersects(crime, school_buffers)) > 0\n\ncrime %>%\n  st_drop_geometry() %>%\n  count(in_school_zone) %>%\n  mutate(percent = n / sum(n) * 100)\n```\n\n\n```{r}\n# Overlay bike network with school zones\nbike_near_schools <- st_intersection(bike_network, school_buffers)\ncrime_on_bikelanes <- st_join(crime, bike_near_schools, join = st_intersects, left = FALSE) %>%\n  distinct(geometry, .keep_all = TRUE)\n\n```\n```{r}\nlibrary(ggplot2)\nlibrary(sf)\n\n# Map\nggplot() +\n  # School buffers\n  geom_sf(data = school_buffers, fill = \"#fde0dd\", color = \"#c51b8a\", alpha = 0.4) +\n  # Schools\n  geom_sf(data = schools, shape = 21, fill = \"deeppink\", color = \"white\", size = 2) +\n  # Crimes\n  geom_sf(data = crime, shape = 16, color = \"red\", alpha = 0.6, size = 1) +\n  # Optional: bike lanes\n  geom_sf(data = bike_network, color = \"goldenrod2\", size = 0.6, alpha = 0.7) +\n  coord_sf() +\n  theme_minimal(base_size = 12) +\n  labs(\n    title = \"Crime Incidents and School Buffers in Philadelphia\",\n    subtitle = \"Pink circles = schools; shaded areas = 500m buffers (~1640 ft); red dots = crime incidents; gold = bike lanes\",\n    caption = \"Data: OpenDataPhilly, 2025\"\n  )\n\n```\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Spatial join: assign crimes to schools via buffer intersection\ncrime_with_school <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)\n\n# Count number of crimes per school\nschool_crime_counts <- crime_with_school %>%\n  st_drop_geometry() %>%\n  group_by(SCHOOL_NAME = school_nam) %>%\n  summarise(crime_count = n()) %>%\n  arrange(desc(crime_count))\n\n# View top 10 schools with most nearby crimes\nhead(school_crime_counts, 10)\n\n# Create points on surface for each school buffer\nzone_points <- school_buffers %>%\n  left_join(school_crime_counts, by = c(\"school_nam\" = \"SCHOOL_NAME\")) %>%\n  mutate(\n    geometry = st_point_on_surface(geometry)  # one point per buffer\n  ) %>%\n  st_as_sf()\n\n# Get tracts of Philly\ntracts_phl <- get_acs(\n  geography = \"tract\",\n  state     = \"PA\",\n  county    = \"Philadelphia\",\n  variables = \"B01003_001\",\n  survey    = \"acs5\",\n  year      = 2022,\n  geometry  = TRUE,\n  cache_table = TRUE\n) %>%\n  select(GEOID, NAME, pop = estimate, geometry) %>%\n  st_transform(2272)    \n\n# Map: crime counts by school zone\nggplot() +\n  # base map: Philadelphia tracts\n  geom_sf(data = tracts_phl, fill = NA, color = \"grey70\", linewidth = 0.2) +\n  # school zone points sized by crime count\n  geom_sf(data = zone_points, aes(size = crime_count), color = \"firebrick\", alpha = 0.6) +\n  scale_size_continuous(name = \"Crime Count\", range = c(1, 6)) +\n  labs(\n    title = \"Crime Counts Around School Zones\",\n    subtitle = \"Point size represents number of crimes within 500m (~1640 ft) of each school\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(legend.position = \"right\")\n```\n\n**Analysis requirements:** - Clear code comments explaining each step -\nAppropriate CRS transformations - Summary statistics or counts - At\nleast one map showing your findings - Brief interpretation of results\n(3-5 sentences)\n\n**Your interpretation:**\n\nFindings:\nThe vast majority of crimes occur within school zones, and all crimes along bike lanes are located within these zones. This suggests that students walking or biking are frequently exposed to areas with higher crime activity.\n\nPolicy Implications:\n\n- Safe Routes to School programs could guide students along safer pathways.\n- Crossing guards, improved lighting, and increased supervision at key intersections may help reduce risk.\n- Targeted interventions on bike lanes near schools could further enhance walking and biking safety for students.\n\n## Finally - A few comments about your incorporation of feedback!\n\nI’ve hidden my API key this time and printed the output only to the console, not in the Markdown.\n\n------------------------------------------------------------------------\n\n## Submission Requirements\n\n**What to submit:**\n\n1.  **Rendered HTML document posted to your course portfolio** with all\n    code, outputs, maps, and text\n    -   Use `embed-resources: true` in YAML so it's a single file\n    -   All code should run without errors\n    -   All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and\n`LastName_FirstName_Assignment2.qmd`\n\n------------------------------------------------------------------------"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"assignment2_template.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Itsnatani Humaira Anaqami","date":"05 October 2025","editor":{"markdown":{"wrap":72}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}