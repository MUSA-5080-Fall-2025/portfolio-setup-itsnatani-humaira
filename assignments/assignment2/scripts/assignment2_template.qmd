---
title: "Assignment 2: Spatial Analysis and Visualization"
subtitle: "Healthcare Access and Equity in Pennsylvania"
author: "Itsnatani Humaira Anaqami"
date: 05 October 2025
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
    embed-resources: true
execute:
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
---

## Assignment Overview

**Learning Objectives:** - Apply spatial operations to answer
policy-relevant research questions - Integrate census demographic data
with spatial analysis - Create publication-quality visualizations and
maps - Work with spatial data from multiple sources - Communicate
findings effectively for policy audiences

------------------------------------------------------------------------

## Part 1: Healthcare Access for Vulnerable Populations

### Research Question

**Which Pennsylvania counties have the highest proportion of vulnerable
populations (elderly + low-income) living far from hospitals?**

Your analysis should identify counties that should be priorities for
healthcare investment and policy intervention.

### Required Analysis Steps

Complete the following analysis, documenting each step with code and
brief explanations:

#### Step 1: Data Collection (5 points)

Load the required spatial data: - Pennsylvania county boundaries -
Pennsylvania hospitals (from lecture data) - Pennsylvania census tracts

**Your Task:**

```{r}
# Load required packages
library(sf)
library(tidyverse)
library(tigris)
library(tidycensus)
library(dplyr)
library(tidyr)
library(scales)
library(patchwork)
library(here)

# Set your Census API key
census_api_key(Sys.getenv("your_API_key"))

# Load spatial data
pa_counties <- st_read(here("assignments/assignment2/scripts/data/Pennsylvania_County_Boundaries.shp"))
hospitals <- st_read(here("assignments/assignment2/scripts/data/hospitals.geojson"))
census_tracts <- tracts(state = "PA", cb = TRUE, progress = FALSE)

# Standardize CRS
st_crs(pa_counties)
hospitals <- st_transform(hospitals, st_crs(pa_counties))
census_tracts <- st_transform(census_tracts, st_crs(pa_counties))

# Check that all data loaded correctly
head(pa_counties)
head(hospitals)
head(census_tracts)
```

**Questions to answer:** 
- How many hospitals are in your dataset? 223 hospitals 
- How many census tracts? 3445 census tracts 
- What coordinate reference system is each dataset in? WGS 84 / Pseudo-Mercator

------------------------------------------------------------------------

#### Step 2: Get Demographic Data

Use `tidycensus` to download tract-level demographic data for
Pennsylvania.

**Required variables:** - Total population - Median household income -
Population 65 years and over (you may need to sum multiple age
categories)

**Your Task:**

```{r}
# Get demographic data from ACS
# Get demographic data from ACS
tract_data <- get_acs(
  geography = "tract",
  state     = "42",
  variables = c(
    total_population = "B01003_001",
    median_household_income = "B19013_001"
  ),
  year = 2022,
  survey = "acs5",
  output = "wide"
)

age_data <- get_acs(
  geography = "tract",
  state     = "42",
  variables = c(
    male_65 <- c("B01001_020","B01001_021","B01001_022","B01001_023","B01001_024","B01001_025"),
    female_65 <- c("B01001_044","B01001_045","B01001_046","B01001_047","B01001_048","B01001_049")
  ),
  year = 2022,
  survey = "acs5",
) %>% 
  group_by (GEOID) %>%
  summarise(pop_65 = sum(estimate, na.rm = TRUE))


tract_data <- tract_data %>%
  left_join(age_data, by = "GEOID")


tract_data %>%
  summarise(missing_data = sum(is.na(median_household_incomeE)))

tract_data %>%
  summarise(median_income = sum(median(median_household_incomeE, na.rm = TRUE)))

# Join to tract boundaries

census_tracts_joined <- census_tracts %>%
  left_join(tract_data, by = "GEOID")
```

**Questions to answer:** 
- What year of ACS data are you using? 2022 
- How many tracts have missing income data? 63 tracts 
- What is the median income across all PA census tracts? $70,188

------------------------------------------------------------------------

#### Step 3: Define Vulnerable Populations

Identify census tracts with vulnerable populations based on TWO
criteria: 1. Low median household income (choose an appropriate
threshold) 2. Significant elderly population (choose an appropriate
threshold)

**Your Task:**

```{r}
# Filter for vulnerable tracts based on your criteria
# Identify vulnerable tracts
vulnerable_tracts <- census_tracts_joined %>%
  mutate(
    percentage_65 = pop_65/total_populationE*100) %>%
  filter(median_household_incomeE < 53300, percentage_65 >= 20)

# How many?
nrow(vulnerable_tracts)

```

**Questions to answer:** 
-   What income threshold did you choose and why?
    I selected $53,300 as the threshold based on the Department of
    Community and Economic Development’s poverty income guideline for a
    family of three. I used a family of three as the reference point,
    assuming a typical household often consists of two parents and one
    child.

-   What elderly population threshold did you choose and why? According
    to the World Bank’s definition, a country is considered 'aging' when
    the share of people aged 65 and older exceeds 7 percent, 'aged' when
    it reaches 14 percent or more, and 'super-aged' when it surpasses 20
    percent. I applied the 20 percent elderly population threshold to
    identify census tracts classified as 'super-aged,' as these areas
    are more vulnerable.

-   How many tracts meet your vulnerability criteria? 225 tracts

-   What percentage of PA census tracts are considered vulnerable by
    your definition? 6.53%

------------------------------------------------------------------------

#### Step 4: Calculate Distance to Hospitals

For each vulnerable tract, calculate the distance to the nearest
hospital.

**Your Task:**

```{r}
# Transform to appropriate projected CRS
vulnerable_tracts_proj <- vulnerable_tracts %>%
  st_transform(5070) # 5070 is a projected coordinate system appropriate for the US. For south PA alone, we can use 3365 too as an alternative, which is more precise.

hospitals_proj <- hospitals %>%
  st_transform(5070)


# Calculate distance from each tract centroid to nearest hospital

tract_centroids <- st_centroid(vulnerable_tracts_proj)

nearest_hospital_idx <- st_nearest_feature(tract_centroids, hospitals_proj)

dist_to_hospital <- st_distance(
  tract_centroids,
  hospitals_proj[nearest_hospital_idx, ],
  by_element = TRUE
)


vulnerable_tracts_proj <- vulnerable_tracts_proj %>%
  mutate(
    dist_to_hospital = as.numeric(dist_to_hospital),
    dist_to_hospital_mi = dist_to_hospital * 0.000621371
  )

distant_data <- vulnerable_tracts_proj %>%
  summarise(
    avg_distance = mean(dist_to_hospital_mi, na.rm = TRUE),
    max_dist = max(dist_to_hospital_mi, na.rm = TRUE),
  )


num_over15 <- vulnerable_tracts_proj %>%
  filter(dist_to_hospital_mi > 15) %>%
  summarise(
    n_over15 = n(),
  )

```

**Requirements:** - Use an appropriate projected coordinate system for
Pennsylvania - Calculate distances in miles - Explain why you chose your
projection

**Questions to answer:**

-   What is the average distance to the nearest hospital for vulnerable
    tracts? 4.249839 miles
-   What is the maximum distance? 18.55538 miles
-   How many vulnerable tracts are more than 15 miles from the nearest
    hospital? 12 tracts

------------------------------------------------------------------------

#### Step 5: Identify Underserved Areas

Define "underserved" as vulnerable tracts that are more than 15 miles
from the nearest hospital.

**Your Task:**

```{r}
# Create underserved variable
undeserved <- vulnerable_tracts_proj %>%
  filter(dist_to_hospital_mi > 15)



```

**Questions to answer:** 
- How many tracts are underserved? 12 tracts
- What percentage of vulnerable tracts are underserved? 12/225*100 = 5.3%
- Does this surprise you? Why or why not? Yes, it is somewhat surprising. A distance of 15 miles is quite far for accessing hospital care—especially for elderly or low-income populations who may face transportation barriers. The fact that 12 census tracts still have to travel that far indicates persistent geographic inequities in healthcare access across parts of Pennsylvania.

------------------------------------------------------------------------

#### Step 6: Aggregate to County Level

Use spatial joins and aggregation to calculate county-level statistics
about vulnerable populations and hospital access.

**Your Task:**

```{r}
# Spatial join tracts to counties
vulnerable_tracts_proj <- st_transform(vulnerable_tracts_proj, st_crs(pa_counties))
undeserved  <- st_transform(undeserved , st_crs(pa_counties))

# Aggregate statistics by county
counties_num = census_tracts %>%
  st_centroid() %>%
  st_join(pa_counties%>% select(COUNTY_NAM)) %>%
  st_drop_geometry() %>%
  group_by(COUNTY_NAM) %>%
  summarize(
    n_tract =  n(),
  )%>%
  arrange(n_tract)

counties_vuln <- vulnerable_tracts_proj %>%
  st_centroid() %>%
  st_join(pa_counties%>% select(COUNTY_NAM)) %>%
  st_drop_geometry() %>%
  group_by(COUNTY_NAM) %>%
  summarize(
    n_vuln =  n(),
    avg_dist_vuln_mi = mean(dist_to_hospital_mi, na.rm = TRUE),
    total_vuln_pop = sum(pop_65, na.rm = TRUE)
  ) %>%
  arrange(desc(total_vuln_pop))

counties_unders <- undeserved %>%
  st_centroid() %>%
  st_join(pa_counties%>% select(COUNTY_NAM)) %>%
  st_drop_geometry() %>%
  group_by(COUNTY_NAM) %>%
  summarize(
    n_unders =  n(),
  ) %>%
  arrange(desc(n_unders))



# Aggregate statistics by county

counties_stat = counties_num %>%
  left_join(counties_vuln, by = "COUNTY_NAM") %>%
  left_join(counties_unders, by = "COUNTY_NAM") %>%
  mutate(
    percentage_unders = n_unders / n_vuln,
    percentage_vuln = n_vuln / n_tract
  )%>%
  arrange(desc(percentage_vuln))



```

**Required county-level statistics:** 
- Number of vulnerable tracts 
- Number of underserved tracts
- Percentage of vulnerable tracts that are underserved 
- Average distance to nearest hospital for vulnerable tracts 
- Total vulnerable population

**Questions to answer:** 
- Which 5 counties have the highest percentage of underserved vulnerable tracts? 
  CAMERON 50%
  FOREST 50%
  JUNIATA 33%
  BEDFORD 33%
  WARREN 30%
- Which counties have the most vulnerable people living far from hospitals?
  Philadelphia with 22880 vulnerable people
- Are there any patterns in where underserved counties are located?
  Yes. The underserved counties are mostly located in rural and less densely populated areas of Pennsylvania, particularly in the northern and central regions. These areas tend to have fewer hospitals and longer travel distances to healthcare facilities compared to urban centers like Philadelphia or Pittsburgh.

------------------------------------------------------------------------

#### Step 7: Create Summary Table

Create a professional table showing the top 10 priority counties for
healthcare investment.

**Your Task:**

```{r}
# Create and format priority counties table
# metrics for the priority: vulnerable index = normalized_number_of_vulnerable_tracts*0.3 + normalized_average_distant _hospital*0.5 + normalized_total_population*0.2

scale_minmax <- function(x) {
  rng <- range(x, na.rm = TRUE)
  if (!is.finite(diff(rng)) || diff(rng) == 0) return(rep(0.5, length(x)))
  (x - rng[1]) / diff(rng)
}

counties_stat_index <- counties_stat %>%
  mutate(
    n_vuln_norm = scale_minmax(n_vuln),
    avg_dist_vuln_mi_norm = scale_minmax(avg_dist_vuln_mi),
    total_vuln_pop_norm = scale_minmax(total_vuln_pop),
    percentage_vuln_norm = scale_minmax(percentage_vuln)
  ) %>%
   mutate(
     vuln_index =
       0.3  * n_vuln_norm +
       0.5 * avg_dist_vuln_mi_norm +
       0.2 * total_vuln_pop_norm
   ) %>%
  arrange(desc(vuln_index))


#make table

library(knitr)

counties_table <- counties_stat_index %>%
  select(
    county_name = COUNTY_NAM,
    vulnerable_index = vuln_index,
    vulnerable_tract_number = n_vuln,
    average_dist_to_hospital = avg_dist_vuln_mi,
    total_vulnerable_pop = total_vuln_pop
  ) %>%
  mutate(
    vulnerable_index = round(vulnerable_index, 3),
    average_dist_to_hospital = round(average_dist_to_hospital, 2),
    total_vulnerable_pop = comma(total_vulnerable_pop)
  )%>%
  arrange(desc(vulnerable_index))

kable(
  counties_table,
  caption = "PA County-level Vulnerability Summary",
  align = "lcccc"
)



```

**Requirements:** - Use `knitr::kable()` or similar for formatting -
Include descriptive column names - Format numbers appropriately (commas
for population, percentages, etc.) - Add an informative caption - Sort
by priority (you decide the metric)

------------------------------------------------------------------------

## Part 2: Comprehensive Visualization

Using the skills from Week 3 (Data Visualization), create
publication-quality maps and charts.

### Map 1: County-Level Choropleth

Create a choropleth map showing healthcare access challenges at the
county level.

**Your Task:**

```{r}
# Create county-level access map
# counties by percentage of vulnerable tracts that are underserved

library(ggplot2)

counties_stat_sf <- pa_counties %>%
  select(COUNTY_NAM, geometry) %>%
  left_join(counties_stat, by = "COUNTY_NAM")

map1 <- ggplot() +
  # county base map
  geom_sf(
    data = counties_stat_sf,
    aes(fill = percentage_vuln),
    color = "white", size = 0.2
  ) +
  # hospitals
  geom_sf(
    data = hospitals_proj,
    shape = 21, fill = "deeppink",
    size = 1.8, alpha = 0.9
  ) +
  # pink color scale
  scale_fill_gradient(
    name = "% vulnerable tracts",
    low = "#fde0dd",     # light pink
    high = "#c51b8a",    # deep magenta
    labels = label_percent(accuracy = 1),
    limits = c(0, 1)
  ) +
  coord_sf() +
  theme_void(base_size = 12) +
  theme(
    legend.position = "right",
    legend.title = element_text(size = 10, face = "bold"),
    legend.text  = element_text(size = 9),
    plot.title   = element_text(face = "bold", size = 16, color = "#7a0177"),
    plot.subtitle= element_text(size = 12),
    plot.caption = element_text(size = 8, color = "gray30")
  ) +
  labs(
    title    = "Healthcare Access Challenges by County",
    subtitle = "Share of vulnerable census tracts",
    caption  = "Source: analysis based on income and percentage of people over 65 years old."
  ) +
  guides(fill = guide_colorbar(
    barheight = unit(70, "pt"),
    barwidth  = unit(8,  "pt"),
    ticks.colour = "black"
  ))

map1

```

**Requirements:** - Fill counties by percentage of vulnerable tracts
that are underserved - Include hospital locations as points - Use an
appropriate color scheme - Include clear title, subtitle, and caption -
Use `theme_void()` or similar clean theme - Add a legend with formatted
labels

------------------------------------------------------------------------

### Map 2: Detailed Vulnerability Map

Create a map highlighting underserved vulnerable tracts.

**Your Task:**

```{r}
# Create detailed tract-level map

map2 <- ggplot() +
  # tract base map
  geom_sf(
    data = census_tracts,
    color = "grey85", size = 0.1
  ) +
  # county boundaries
  geom_sf(
    data = pa_counties,
    color = "goldenrod2", size = 0.5, fill = NA
  ) +
  # hospitals
  geom_sf(
    data = hospitals_proj,
    shape = 16, color = "darkred",
    size = 1, alpha = 0.9
  ) +
  # underserved communities (highlighted in yellow)
  geom_sf(
    data = undeserved,
    fill = "#fff7bc",      
    color = "#fd8d3c",    
    size = 0.4
  ) +
  coord_sf() +
  theme_void(base_size = 12) +
  theme(
    plot.title   = element_text(face = "bold", size = 16, color = "#b15928"),
    plot.subtitle= element_text(size = 12),
    plot.caption = element_text(size = 8, color = "gray30")
  ) +
  labs(
    title    = "Underserved Communities",
    subtitle = "Yellow tracts represent underserved communities; red points show hospital locations."
  ) +
  guides(fill = guide_colorbar(
    barheight = unit(70, "pt"),
    barwidth  = unit(8,  "pt"),
    ticks.colour = "black"
  ))


map2



```

**Requirements:** - Show underserved vulnerable tracts in a contrasting
color - Include county boundaries for context - Show hospital
locations - Use appropriate visual hierarchy (what should stand out?) -
Include informative title and subtitle

------------------------------------------------------------------------

### Chart: Distribution Analysis

Create a visualization showing the distribution of distances to
hospitals for vulnerable populations.

**Your Task:**

```{r}
# Create distribution visualization

# Histogram or density plot of distances
ggplot(vulnerable_tracts_proj) +
  aes(x = dist_to_hospital_mi) +
  geom_histogram(bins = 15, fill = "deeppink", alpha = 0.7) +
  labs(
    title = "Distribution of distance to the nearest hospital",
    x = "distance to the nearest hospital",
    y = "Number of vulnerable tracts",
    caption  = "Most of tracts have distance between 0 and 5."
  ) +
  theme_minimal()
```


```{r}
# Box plot comparing distances across regions
ggplot(vulnerable_tracts_proj) +
  aes(x = NAMELSADCO, y = dist_to_hospital_mi, fill = NAMELSADCO) +
  geom_boxplot() +
  labs(
    title = "Distances by County Category",
    x = "County",
    y = "Distance",
    caption  = "While most counties show little variation, some has huge internal differences"
  ) +
  theme_minimal() +
  theme(legend.position = "none")+
  theme(
  axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 7)
)
```
```{r}
# Bar chart of underserved tracts by county
# Aggregate number of underserved tracts per county
underserved_by_county <- undeserved %>%
  st_drop_geometry() %>%
  group_by(NAMELSADCO) %>%
  summarise(n_underserved = n()) %>%
  arrange(desc(n_underserved))

ggplot(underserved_by_county) +
  aes(x = reorder(NAMELSADCO, n_underserved), y = n_underserved, fill = n_underserved) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  scale_fill_gradient(low = "#fde0dd", high = "#c51b8a") +
  labs(
    title = "Number of Underserved Vulnerable Tracts by County",
    x = "County",
    y = "Number of Underserved Tracts",
    caption = "Counties with the highest number of underserved tracts indicate greater healthcare access challenges."
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(face = "bold", size = 16, color = "#7a0177"),
    plot.subtitle = element_text(size = 12),
    axis.text.y = element_text(size = 8)
  )
```


```{r}
# Scatter plot of distance vs. vulnerable population size
ggplot(vulnerable_tracts_proj) +
  aes(x = dist_to_hospital_mi, y = total_populationE) +
  geom_point(color = "deeppink", alpha = 0.6, size = 2) +
  geom_smooth(
    method = "lm",              
    se = TRUE,                  
    color = "darkred",          
    fill = "pink",              
    linewidth = 1
  ) +
  labs(
    title = "distance vs. vulnerable population size",
    x = "Distance to the nearest hospital",
    y = "Vulnerable population size",
    caption  = str_wrap("More vulnerable population, little distance to hospital. Since hospitals are designed to located near population clusters, and we didn't limit this effect in this study ", width = 90)
  ) +
  theme_minimal() +
  scale_x_continuous() +
  scale_y_continuous(labels = comma)
```
**Suggested chart types:** - Histogram or density plot of distances -
Box plot comparing distances across regions - Bar chart of underserved
tracts by county - Scatter plot of distance vs. vulnerable population
size

**Requirements:** - Clear axes labels with units - Appropriate title -
Professional formatting - Brief interpretation (1-2 sentences as a
caption or in text)

------------------------------------------------------------------------

## Part 3: Bring Your Own Data Analysis

Choose your own additional spatial dataset and conduct a supplementary
analysis.

### Challenge Options

Choose ONE of the following challenge exercises, or propose your own
research question using OpenDataPhilly data
(https://opendataphilly.org/datasets/).

**Note these are just loose suggestions to spark ideas - follow or make
your own as the data permits and as your ideas evolve. This analysis
should include bringing in your own dataset, ensuring the projection/CRS
of your layers align and are appropriate for the analysis (not lat/long
or geodetic coordinate systems). The analysis portion should include
some combination of spatial and attribute operations to answer a
relatively straightforward question**

------------------------------------------------------------------------

#### Education & Youth Services

**Option A: Educational Desert Analysis** - **Data:** Schools,
Libraries, Recreation Centers, Census tracts (child population) -
**Question:** "Which neighborhoods lack adequate educational
infrastructure for children?" - **Operations:** Buffer schools/libraries
(0.5 mile walking distance), identify coverage gaps, overlay with child
population density - **Policy relevance:** School district planning,
library placement, after-school program siting

**Option B: School Safety Zones** - **Data:** Schools, Crime Incidents,
Bike Network - **Question:** "Are school zones safe for walking/biking,
or are they crime hotspots?" - **Operations:** Buffer schools (1000ft
safety zone), spatial join with crime incidents, assess bike
infrastructure coverage - **Policy relevance:** Safe Routes to School
programs, crossing guard placement

------------------------------------------------------------------------

#### Environmental Justice

**Option C: Green Space Equity** - **Data:** Parks, Street Trees, Census
tracts (race/income demographics) - **Question:** "Do low-income and
minority neighborhoods have equitable access to green space?" -
**Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree
canopy or park acreage per capita, compare by demographics - **Policy
relevance:** Climate resilience, environmental justice, urban forestry
investment ---

#### Public Safety & Justice

**Option D: Crime & Community Resources** - **Data:** Crime Incidents,
Recreation Centers, Libraries, Street Lights - **Question:** "Are
high-crime areas underserved by community resources?" - **Operations:**
Aggregate crime counts to census tracts or neighborhoods, count
community resources per area, spatial correlation analysis - **Policy
relevance:** Community investment, violence prevention strategies ---

#### Infrastructure & Services

**Option E: Polling Place Accessibility** - **Data:** Polling Places,
SEPTA stops, Census tracts (elderly population, disability rates) -
**Question:** "Are polling places accessible for elderly and disabled
voters?" - **Operations:** Buffer polling places and transit stops,
identify vulnerable populations, find areas lacking access - **Policy
relevance:** Voting rights, election infrastructure, ADA compliance

------------------------------------------------------------------------

#### Health & Wellness

**Option F: Recreation & Population Health** - **Data:** Recreation
Centers, Playgrounds, Parks, Census tracts (demographics) -
**Question:** "Is lack of recreation access associated with vulnerable
populations?" - **Operations:** Calculate recreation facilities per
capita by neighborhood, buffer facilities for walking access, overlay
with demographic indicators - **Policy relevance:** Public health
investment, recreation programming, obesity prevention

------------------------------------------------------------------------

#### Emergency Services

**Option G: EMS Response Coverage** - **Data:** Fire Stations, EMS
stations, Population density, High-rise buildings - **Question:** "Are
population-dense areas adequately covered by emergency services?" -
**Operations:** Create service area buffers (5-minute drive = \~2
miles), assess population coverage, identify gaps in high-density
areas - **Policy relevance:** Emergency preparedness, station siting
decisions

------------------------------------------------------------------------

#### Arts & Culture

**Option H: Cultural Asset Distribution** - **Data:** Public Art,
Museums, Historic sites/markers, Neighborhoods - **Question:** "Do all
neighborhoods have equitable access to cultural amenities?" -
**Operations:** Count cultural assets per neighborhood, normalize by
population, compare distribution across demographic groups - **Policy
relevance:** Cultural equity, tourism, quality of life, neighborhood
identity

------------------------------------------------------------------------

### Data Sources

**OpenDataPhilly:** https://opendataphilly.org/datasets/ - Most datasets
available as GeoJSON, Shapefile, or CSV with coordinates - Always check
the Metadata for a data dictionary of the fields.

**Additional Sources:** - **Pennsylvania Open Data:**
https://data.pa.gov/ - **Census Bureau (via tidycensus):** Demographics,
economic indicators, commute patterns - **TIGER/Line (via tigris):**
Geographic boundaries

### Recommended Starting Points

**If you're feeling confident:** Choose an advanced challenge with
multiple data layers. **If you are a beginner, choose something more
manageable that helps you understand the basics**

**If you have a different idea:** Propose your own question! Just make
sure: - You can access the spatial data - You can perform at least 2
spatial operations

### Your Analysis

**Your Task:**

1.  **Find and load additional data**
    -   Document your data source
    -   Check and standardize the CRS
    -   Provide basic summary statistics

```{r}
# Load your additional dataset
library(sf)

schools <- st_read("C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Schools.shp")

crime <- st_read("C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/incidents_part1_part2/incidents_part1_part2.shp")

bike_network <- crime <- st_read("C:/NATAN/PENN/2025 FALL/Public Policy Analytics/portfolio-setup-itsnatani-humaira/assignments/assignment2/scripts/data/Bike_Network/Bike_Network.shp")

```
```{r}
schools <- st_transform(schools, 2272)
crime <- st_transform(crime, 2272)
bike_network <- st_transform(bike_network, 2272)

library(dplyr)
library(ggplot2)

## school type
schools %>%
  st_drop_geometry() %>%
  count(type_speci, sort = TRUE) %>%
  ggplot(aes(x = reorder(type_speci, n), y = n)) +
  geom_bar(stat = "identity", fill = "deeppink") +
  coord_flip() +
  labs(
    title = "Distribution of school types",
    x = "School type",
    y = "Number"
  ) +
  theme_minimal(base_size = 13)
```
```{r}
# Crime Location
crime %>%
  st_drop_geometry() %>%
  count(STREETNAME) %>%
  slice_max(order_by = n, n = 10) %>%       # top 10 streets
  ggplot(aes(x = reorder(STREETNAME, n), y = n)) +
  geom_col(fill = "pink") +
  coord_flip() +                            # flip for readability
  labs(
    title = "Top 10 Streets by Number of Crime Incidents",
    x = "Street",
    y = "Number of Incidents"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.y = element_text(size = 10)
  )
```


```{r}
#crime types
crime %>%
  st_drop_geometry() %>%
  count(TYPE, sort = TRUE) %>%
  slice_max(n, n = 10) %>%  
  ggplot(aes(x = reorder(TYPE, n), y = n)) +
  geom_bar(stat = "identity", fill = "pink") +
  coord_flip() +
  labs(
    title = "Top 10 Crime Types",
    x = "Types",
    y = "Number of incidents"
  ) +
  theme_minimal(base_size = 13)
```


```{r}
# Bike lane
bike_length_summary <- bike_network %>%
  st_drop_geometry() %>%
  group_by(TYPE) %>%
  summarise(total_length = sum(Shape__Len, na.rm = TRUE)) %>%
  arrange(desc(total_length))

ggplot(bike_length_summary, aes(x = reorder(TYPE, total_length), y = total_length)) +
  geom_bar(stat = "identity", fill = "pink") +
  coord_flip() +
  labs(
    title = "Distribution of Bike Lane Type",
    x = "Type",
    y = "Total Length"
  ) +
  theme_minimal(base_size = 13)
```

**Questions to answer:** 
- What dataset did you choose and why? 
  I used the Schools, Crime Incidents, and Bike Network datasets. My goal was to assess whether school zones in   Philadelphia are safe for walking and biking, or if they coincide with areas of higher crime concentration.
- What is the data source and date? 
  All datasets were obtained from OpenDataPhilly (2025).
- How many features does it contain? 
  Each dataset includes spatial geometry, allowing for spatial analysis. The Schools dataset contains 15 variables, while both the Crime Incidents and Bike Network datasets each include 9 variables.
- What CRS is it in? Did you need to transform it?
  All datasets were initially in WGS 84 / Pseudo-Mercator. I transformed them to EPSG:2272 (NAD83 / Pennsylvania South), which is more suitable for accurate spatial analysis in southern Pennsylvania.

------------------------------------------------------------------------

2.  **Pose a research question**

"Are school zones safe for walking/biking, or are they crime hotspots?"

------------------------------------------------------------------------

3.  **Conduct spatial analysis**

Use at least TWO spatial operations to answer your research question.

**Required operations (choose 2+):** - Buffers - Spatial joins - Spatial
filtering with predicates - Distance calculations - Intersections or
unions - Point-in-polygon aggregation

**Your Task:**

```{r}
# Your spatial analysis
# Create school buffers of 500 meters ≈ 1640 feet
school_buffers <- st_buffer(schools, dist = 1640)

# Find crimes within school buffers
crime_near_schools <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)

# Summarize crimes per school
crime_summary <- crime_near_schools %>%
  st_drop_geometry() %>%
  count(SCHOOL_NAME = school_nam, sort = TRUE)

head(crime_summary, 10)
```


```{r}
# Compare crimes inside vs outside school zones
crime$in_school_zone <- lengths(st_intersects(crime, school_buffers)) > 0

crime %>%
  st_drop_geometry() %>%
  count(in_school_zone) %>%
  mutate(percent = n / sum(n) * 100)
```


```{r}
# Overlay bike network with school zones
bike_near_schools <- st_intersection(bike_network, school_buffers)
crime_on_bikelanes <- st_join(crime, bike_near_schools, join = st_intersects, left = FALSE) %>%
  distinct(geometry, .keep_all = TRUE)

```
```{r}
library(ggplot2)
library(sf)

# Map
ggplot() +
  # School buffers
  geom_sf(data = school_buffers, fill = "#fde0dd", color = "#c51b8a", alpha = 0.4) +
  # Schools
  geom_sf(data = schools, shape = 21, fill = "deeppink", color = "white", size = 2) +
  # Crimes
  geom_sf(data = crime, shape = 16, color = "red", alpha = 0.6, size = 1) +
  # Optional: bike lanes
  geom_sf(data = bike_network, color = "goldenrod2", size = 0.6, alpha = 0.7) +
  coord_sf() +
  theme_minimal(base_size = 12) +
  labs(
    title = "Crime Incidents and School Buffers in Philadelphia",
    subtitle = "Pink circles = schools; shaded areas = 500m buffers (~1640 ft); red dots = crime incidents; gold = bike lanes",
    caption = "Data: OpenDataPhilly, 2025"
  )

```
```{r}
library(dplyr)
library(ggplot2)

# Spatial join: assign crimes to schools via buffer intersection
crime_with_school <- st_join(crime, school_buffers, join = st_intersects, left = FALSE)

# Count number of crimes per school
school_crime_counts <- crime_with_school %>%
  st_drop_geometry() %>%
  group_by(SCHOOL_NAME = school_nam) %>%
  summarise(crime_count = n()) %>%
  arrange(desc(crime_count))

# View top 10 schools with most nearby crimes
head(school_crime_counts, 10)

# Create points on surface for each school buffer
zone_points <- school_buffers %>%
  left_join(school_crime_counts, by = c("school_nam" = "SCHOOL_NAME")) %>%
  mutate(
    geometry = st_point_on_surface(geometry)  # one point per buffer
  ) %>%
  st_as_sf()

# Get tracts of Philly
tracts_phl <- get_acs(
  geography = "tract",
  state     = "PA",
  county    = "Philadelphia",
  variables = "B01003_001",
  survey    = "acs5",
  year      = 2022,
  geometry  = TRUE,
  cache_table = TRUE
) %>%
  select(GEOID, NAME, pop = estimate, geometry) %>%
  st_transform(2272)    

# Map: crime counts by school zone
ggplot() +
  # base map: Philadelphia tracts
  geom_sf(data = tracts_phl, fill = NA, color = "grey70", linewidth = 0.2) +
  # school zone points sized by crime count
  geom_sf(data = zone_points, aes(size = crime_count), color = "firebrick", alpha = 0.6) +
  scale_size_continuous(name = "Crime Count", range = c(1, 6)) +
  labs(
    title = "Crime Counts Around School Zones",
    subtitle = "Point size represents number of crimes within 500m (~1640 ft) of each school",
    x = NULL,
    y = NULL
  ) +
  theme_minimal(base_size = 13) +
  theme(legend.position = "right")
```

**Analysis requirements:** - Clear code comments explaining each step -
Appropriate CRS transformations - Summary statistics or counts - At
least one map showing your findings - Brief interpretation of results
(3-5 sentences)

**Your interpretation:**

Findings:
The vast majority of crimes occur within school zones, and all crimes along bike lanes are located within these zones. This suggests that students walking or biking are frequently exposed to areas with higher crime activity.

Policy Implications:

- Safe Routes to School programs could guide students along safer pathways.
- Crossing guards, improved lighting, and increased supervision at key intersections may help reduce risk.
- Targeted interventions on bike lanes near schools could further enhance walking and biking safety for students.

## Finally - A few comments about your incorporation of feedback!

I’ve hidden my API key this time and printed the output only to the console, not in the Markdown.

------------------------------------------------------------------------

## Submission Requirements

**What to submit:**

1.  **Rendered HTML document posted to your course portfolio** with all
    code, outputs, maps, and text
    -   Use `embed-resources: true` in YAML so it's a single file
    -   All code should run without errors
    -   All maps and charts should display correctly

**File naming:** `LastName_FirstName_Assignment2.html` and
`LastName_FirstName_Assignment2.qmd`

------------------------------------------------------------------------